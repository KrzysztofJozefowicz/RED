--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _d8aMACuvEeW667Afdo4DcA,_s-ctEA4_EeePcNCRX_abWA,_4UxogBh5Eee93KAG-tW51Q
Element-Name: RunIncorrectScriptInTest
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _wd55QBiBEee93KAG-tW51Q
Runtime-Version: 2.1.0.201606221726
Save-Time: 5/24/17 9:37 AM
Tags: Unstable
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val script_name  [os-specific "script_win.bat" "script_lin.sh"]]

//add new config
get-menu "Run/Run Configurations..." | click
with [get-window "Run Configurations"] {
	//select project
    get-tree | select Robot | double-click
    get-group Project | get-button "Browse..." | click
    with [get-window "Select project"] {
        get-tree | select ScriptProject
        get-button OK | click
    }
    //add suite
    get-group "Test Suite(s)" | get-button "Browse..." | click
    with [get-window "Select test suite"] {
        get-tree | select "ScriptProject/TestFile.robot"
        get-button OK | click
    }
    get-tab-folder | get-tab-item Executor | click
}

//add script and run
set-dialog-result File [format "platform:/resource/ScriptProject/scripts/%s" $script_name]
with [get-window "Run Configurations"] {
    get-group "Executable file" | get-button "Browse..." | click
    get-button Apply | click
    get-button Close | click
}
	
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
//remove entire content of script file
	with [get-view "Project Explorer" | get-tree] {
	    select ScriptProject | double-click
	    select "ScriptProject/scripts/script_win.bat" 
	        | get-menu "Open With/Text Editor" | click
	}
	
	with [get-editor $script_name | get-text-viewer] {
	    key-type "M1+a"
	    key-type Del
	    key-type "M1+s"
	}

	//check error
get-button "Run.*" | click -arrow
get-menu "Run Configurations..." | click
get-window "Run Configurations" | get-tree | select "Robot/New_configuration"
	exec-with-options {
	    get-window "Run Configurations" | get-button Run | click
		
				    
	    //wait for window
	    try -times 5 -delay 500 -command{
		    //first label
		    get-window "Problem Occurred" | get-label "'Launching New_configuration' has encountered a problem." 
		        | get-property caption | equals "'Launching New_configuration' has encountered a problem." | verify-true
	    }
	    //second label    
	    get-window "Problem Occurred" | get-label "Exception occurred executing command line." | get-property caption 
	        | equals "Exception occurred executing command line." | verify-true
	        
	    //details    
	    get-window "Problem Occurred" | get-button "Details >>" | click
	    
	 
	    get-window "Problem Occurred" | get-editbox -after [get-label "Exception occurred executing command line."] 
	        | get-property text | equals "Exception occurred executing command line.\n"
	        + "Cannot run program .* CreateProcess error=193, %1 is not a valid Win32 application" 
	        | verify-true
	 
	    get-window "Problem Occurred" | get-button OK | click 
	} -allowStatusDialog
}

// --------------------------------------- run wrong system command ----------------------------------------------------------

get-view "Project Explorer" | get-tree | select "ScriptProject/scripts/script_lin.sh" 
    | select [format"ScriptProject/scripts/%s" $script_name] | get-menu "Open With/Text Editor" | click
  
with [get-editor $script_name | get-text-viewer] {
 	key-type "M1+a"
	key-type Del
    type-text "wrong_command"
    key-type "M1+s"
}

//run test with wrong command
get-button "Run.*" | click -arrow
get-menu "Run Configurations..." | click
with [get-window "Run Configurations"] {
    get-tree | select "Robot/New_configuration" 
    get-button Run | click
}

//check console    
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
	get-view Console | get-text-viewer | get-property text 
	    | contains"'wrong_command' is not recognized as an internal or external command,\n"
	    + "operable program or batch file." | verify-true

}-else{
	get-view Console | get-text-viewer | get-property text 
	    | contains"line 1: wrong_command: command not found" | verify-true
}

// --------------------------------------- use not existing interpreter ----------------------------------------------------------	
//set correct command	
with [get-editor $script_name | get-text-viewer] {
	set-caret-pos 1 1
    key-type "M1+a"
    key-type Del
    type-text "echo Hello world!"
    key-type "M1+s"
}
wait 1000

//use not existing interpreter
get-menu "Run/Run Configurations..." | click
with [get-window "Run Configurations"] {
    get-tab-folder | get-tab-item Executor | click
    with [get-group Interpreter] {
        get-button Use | click
        get-combo | select PyPy
    }
    get-button Apply | click
}
exec-with-options {
    get-window "Run Configurations" | get-button Run | click
}
// verify if script was runned
get-view Console | get-text-viewer | get-property text 
    | equals ".*echo Hello world! \n"
    + "Hello world!\n"
    + "Command: .* -m robot.run --listener .* --argumentfile .* .*\n"
    + "Suite Executor: <unknown>" | verify-true
// verify if no test was runned
get-view "Message Log" | get-editbox | get-property text | equals "" | verify-true

// --------------------------------------- run removed script ----------------------------------------------------------

//set default interpreter
get-menu "Run/Run Configurations..." | click
with [get-window "Run Configurations"] {
    get-tab-folder | get-tab-item Executor | click
    get-group Interpreter | get-button "Use interpreter as defined in project configuration" | click
    get-button Apply | click
    get-button Close | click
}

//remove all scripts
get-view "Project Explorer" | click
get-editor $script_name | close
get-view "Project Explorer" | get-tree | select "ScriptProject/scripts" | key-type Del
get-window "Delete Resources" | get-button OK | click

//run test
get-button "Run.*" | click -arrow
exec-with-options {
    get-menu "1 New_configuration" | click
    
    try -times 5 -delay 500 -command{
	    //first label
	    get-window "Problem Occurred" | get-label "'Launching New_configuration' has encountered a problem." 
	        | get-property caption | equals "'Launching New_configuration' has encountered a problem." | verify-true
    }
    //second label    
    get-window "Problem Occurred" 
        | get-label "Executable file.*" 
        | get-property caption 
        | equals [format "Executable file '%s%sScriptProject%sscripts%s%s' does not exist" $RED_workspace_path $sys_sep $sys_sep $sys_sep $script_name]
        | verify-true
    
    //details    
    get-window "Problem Occurred" | get-button "Details >>" | click
    get-window "Problem Occurred" | get-editbox 
        -after [get-label "Executable file .*"] 
        | get-property text 
        | equals [format "Executable file '%s%sScriptProject%sscripts%s%s' does not exist" $RED_workspace_path $sys_sep $sys_sep $sys_sep $script_name]
        | verify-true
    get-window "Problem Occurred" | get-button OK | click
} -allowStatusDialog
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
