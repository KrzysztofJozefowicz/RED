--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _VzYJ0KEAEea9Cvae3yWo1A
Element-Name: CommentingTestCasesInTable
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _IlBPkBq5EeexL8zyucnNEw
Runtime-Version: 2.1.0.201606221726
Save-Time: 5/25/17 2:18 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//change file extension to tsv
with [get-view "Project Explorer" | get-tree] {
    select RobotProject | double-click
    select "RobotProject/TestFile.robot" | key-type F2
}
with [get-window "Rename Resource"] {
    get-editbox -after [get-label "New name:"] | set-text "TestFile.tsv"
    get-button OK | click
}
get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.tsv" | double-click

get-editor "TestFile.tsv" | get-text-viewer | set-text "*** Test Cases ***\n"
    + "test 1\n"
    + "\t[Documentation]\tthis is doc\n"
    + "\t...\tcontinued here\n"
    + "\tlog\t7\n"
    + "\tShould Be Equal\t123g\t123g\n"
    + "\tCatenate\tr\ts\tt\tu\tw\n"
    + "\tBut Convert To Hex\ttext\n"
    + "\t[Teardown]\tnew_kw\n"
    + "test2\n"
    + "\t[Setup]\tConvert To Boolean\t56new\n"
    + "\t# fgh\n"
    + "\t:FOR\t${x}\tIN RANGE\t10\n"
    + "\t\\\tlog\t${x}\n"
    + "\t\\\tConvert To Bytes\tfog56" 
    
//try to comment Kw name and buttons    
get-editor "TestFile.tsv" | get-tab-folder | get-tab-item "Test Cases" | click
get-view Outline | get-tree | select "TestFile.tsv/Test Cases/test 1"
with [get-editor "TestFile.tsv" | get-canvas -after [get-label "Test Cases"] -index 1] {
    get-menu "Toggle Comment" | click
    
    // ".. add" button
    key-type Up
    key-type "M1+/"
    
    //"..." button
    key-type Up
    key-type "M1+/"
    
    //remove all args in last line and comment line with only "\"
    key-type Up
    key-type Right
    key-type Del -times 2
    key-type "M1+/"
    
    //go up to doc setting and comment it - doc section is in the same place
    key-type Up -times 12
    key-type "M1+/"
    
    //comment line with Should be equal
    key-type Down -times 3
    key-type "M1+/"
    
    //go down and select whole single line with But Convert
    key-type Down -times 2
    get-menu "Row/Select whole row(s)" | click
    
    //comment 5 time - stress test
    key-type "M1+/" -times 5
}

check-test_case-row -file "TestFile.tsv" -row 1 -tc "test 1" 
check-test_case-row -file "TestFile.tsv" -row 2 -tc "# [Documentation]"  -c1 "this is doc" -c2 "..." -c3 "continued here"
check-test_case-row -file "TestFile.tsv" -row 3 -tc "[Teardown]" -c1 "new_kw" 
check-test_case-row -file "TestFile.tsv" -row 4 -tc "log" -c1 "7"
check-test_case-row -file "TestFile.tsv" -row 5 -tc "# Should Be Equal" -c1 "123g" -c2 "123g"
check-test_case-row -file "TestFile.tsv" -row 6 -tc "Catenate" -c1 "r" -c2 "s" -c3 "t" -c4 "u" -c5 "w"
check-test_case-row -file "TestFile.tsv" -row 7 -tc "# But Convert To Hex" -c1 "text"
check-test_case-row -file "TestFile.tsv" -row 8 -tc "..."

check-test_case-row -file "TestFile.tsv" -row 9 -tc "test2"
check-test_case-row -file "TestFile.tsv" -row 10 -tc "[Setup]" -c1 "Convert To Boolean" -c2 "56new"
check-test_case-row -file "TestFile.tsv" -row 11 -tc "# fgh" 
check-test_case-row -file "TestFile.tsv" -row 12 -tc ":FOR" -c1 "${x}" -c2 "IN RANGE" -c3 "10"
check-test_case-row -file "TestFile.tsv" -row 13 -tc "\\" -c1 "log" -c2 "${x}"
check-test_case-row -file "TestFile.tsv" -row 14 -tc "# \\"
check-test_case-row -file "TestFile.tsv" -row 15 -tc "..."
check-test_case-row -file "TestFile.tsv" -row 16 -tc "...add new case" 

with [get-editor "TestFile.tsv"] {
    get-tab-folder | get-tab-item Source | click
}

get-editor "TestFile.tsv" | get-text-viewer | get-property text | equals "*** Test Cases ***\n"
    + "test 1\n"
    + "\t# [Documentation]\tthis is doc\t...\tcontinued here\n"
    + "\tlog\t7\n"
    + "\t[Teardown]\tnew_kw\n"
    + "\t# Should Be Equal\t123g\t123g\n"
    + "\tCatenate\tr\ts\tt\tu\tw\n"
    + "\t# But Convert To Hex\ttext\n"
    + "test2\n"
    + "\t[Setup]\tConvert To Boolean\t56new\n"
    + "\t# fgh\n"
    + "\t:FOR\t${x}\tIN RANGE\t10\n"
    + "\t\\\tlog\t${x}\n"
    + "\t# \\" | verify-true
        
//go back to test cases
with [get-editor "TestFile.tsv"] {
    get-tab-folder | get-tab-item "Test Cases" | click
    with [get-canvas -after [get-label "Test Cases"] -index 1] {
    	
    	//uncomment But Convert (gherkin) KW
        get-menu "Toggle Comment" | click
        
        //go up and uncomment Doc section
        key-type Up -times 4
        get-menu "Toggle Comment" | click
        
        //go down for fgh 
        key-type Right -times 3
        key-type Down -times 9
        
        //select both fgh and :For below (one is commented, other not)
        key-type "M2+ARROW_DOWN"

        //comment 3 times
        get-menu "Toggle Comment" | click
        get-menu "Toggle Comment" | click
        get-menu "Toggle Comment" | click
        
        //go up to fgh and Teardown, comment
        key-type Up
        key-type "M2+ARROW_DOWN"
        get-menu "Toggle Comment" | click
    }
    get-tab-folder | get-tab-item Source | click
}
get-editor "TestFile.tsv" | get-text-viewer | get-property text | equals "*** Test Cases ***\n"
    + "test 1\n"
    + "\t[Documentation]\tthis is doc\t...\tcontinued here\n"
    + "\tlog\t7\n"
    + "\t[Teardown]\tnew_kw\n"
    + "\t# Should Be Equal\t123g\t123g\n"
    + "\tCatenate\tr\ts\tt\tu\tw\n"
    + "\tBut Convert To Hex\ttext\n"
    + "test2\n"
    + "\t# [Setup]\tConvert To Boolean\t56new\n"
    + "\t# # # fgh\n"
    + "\t# :FOR\t${x}\tIN RANGE\t10\n"
    + "\t\\\tlog\t${x}\n"
    + "\t# \\" | verify-true
    
//back to TC table     
with [get-editor "TestFile.tsv"] {
    with [get-tab-folder] {
        get-tab-item Keywords | click
        get-tab-item "Test Cases" | click
    }
    with [get-canvas -after [get-label "Test Cases"] -index 1] {
        key-type Down -times 2
        key-type Enter
    }
    
    //set commented value in for loop
    with [get-editbox -after [get-label "Test Cases"] -index 1] {
        type-text "#17r"
        key-type Enter
    }
}    

check-test_case-row -file "TestFile.tsv" -row 1 -tc "test 1" 
check-test_case-row -file "TestFile.tsv" -row 2 -tc "[Documentation]"  -c1 "this is doc ... continued here"
check-test_case-row -file "TestFile.tsv" -row 3 -tc "[Teardown]" -c1 "new_kw" 
check-test_case-row -file "TestFile.tsv" -row 4 -tc "log" -c1 "7"
check-test_case-row -file "TestFile.tsv" -row 5 -tc "# Should Be Equal" -c1 "123g" -c2 "123g"
check-test_case-row -file "TestFile.tsv" -row 6 -tc "Catenate" -c1 "r" -c2 "s" -c3 "t" -c4 "u" -c5 "w"
check-test_case-row -file "TestFile.tsv" -row 7 -tc "But Convert To Hex" -c1 "text"
check-test_case-row -file "TestFile.tsv" -row 8 -tc "..."

check-test_case-row -file "TestFile.tsv" -row 9 -tc "test2"
check-test_case-row -file "TestFile.tsv" -row 10 -tc "# [Setup]" -c1 "Convert To Boolean" -c2 "56new"
check-test_case-row -file "TestFile.tsv" -row 11 -tc "# # # fgh" 
check-test_case-row -file "TestFile.tsv" -row 12 -tc "# :FOR" -c1 "${x}" -c2 "IN RANGE" -c3 "#17r"
check-test_case-row -file "TestFile.tsv" -row 13 -tc "\\" -c1 "log" -c2 "${x}"
check-test_case-row -file "TestFile.tsv" -row 14 -tc "# \\"
check-test_case-row -file "TestFile.tsv" -row 15 -tc "..."
check-test_case-row -file "TestFile.tsv" -row 16 -tc "...add new case"      
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
