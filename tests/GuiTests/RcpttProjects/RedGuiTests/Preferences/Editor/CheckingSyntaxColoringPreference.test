--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: CheckingSyntaxColoringPreference
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _rIRz0JRoEeaAWer3wBFETA
Runtime-Version: 2.2.0.201706152316
Save-Time: 3/5/18 11:41 AM
Testcase-Type: ecl
Verifications: _yvhKoJRrEeaAWer3wBFETA

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

proc "check-bold-and-italic-preference" [val bold false] [val italic false]{
	with [get-window Preferences] {
	    get-button Bold | get-property selected | equals $bold | verify-true
	    get-button Italic | get-property selected | equals $italic | verify-true
	}

}

get-preferences-menu | click
get-window Preferences | get-tree | select "Robot Framework/Editor/Syntax Coloring"

with [get-window Preferences] {
    with [get-control Any -after [get-label "Syntax Coloring"] -index 9] {
        get-property "getChildren().length" | equals 6 | verify-true
        
        //check all items to color
        get-property "getChildren().Control[0].getItems().length" | equals 10 | verify-true
        get-property "getChildren().Control[0].getItems().String[0]" | equals Comments | verify-true
        get-property "getChildren().Control[0].getItems().String[1]" | equals "Given/When/And/Then" | verify-true
        get-property "getChildren().Control[0].getItems().String[2]" | equals "Keyword calls" | verify-true
        get-property "getChildren().Control[0].getItems().String[3]" | equals "Keyword/Test Cases definition headers" 
            | verify-true
        get-property "getChildren().Control[0].getItems().String[4]" | equals "Section headers" | verify-true
        get-property "getChildren().Control[0].getItems().String[5]" | equals Settings | verify-true
        get-property "getChildren().Control[0].getItems().String[6]" | equals "Special items" | verify-true
        get-property "getChildren().Control[0].getItems().String[7]" | equals "Undefined tables" | verify-true
        get-property "getChildren().Control[0].getItems().String[8]" | equals Variables | verify-true
        get-property "getChildren().Control[0].getItems().String[9]" | equals Tasks | verify-true
        
        //check 3 options: color, bold, italic
        get-property "getChildren().Control[1].getChildren().length" | equals 4 | verify-true
        get-property "getChildren().Control[1].getChildren().Control[0].getClassName()" 
            | equals "org.eclipse.swt.widgets.Button" | verify-true
        get-property "getChildren().Control[1].getChildren().Control[0].getText()" | equals "" | verify-true
        
        get-property "getChildren().Control[1].getChildren().Control[1].getText()" | equals Bold | verify-true
        get-property "getChildren().Control[1].getChildren().Control[1].getSelection()" | equals false | verify-true
        get-property "getChildren().Control[1].getChildren().Control[1].isEnabled()" | equals false | verify-true
        
        get-property "getChildren().Control[1].getChildren().Control[2].getText()" | equals Italic | verify-true
        get-property "getChildren().Control[1].getChildren().Control[2].getSelection()" | equals false | verify-true
        get-property "getChildren().Control[1].getChildren().Control[2].isEnabled()" | equals false | verify-true
        
        //user predfined coloring
        get-property "getChildren().Control[1].getChildren().Control[3].getText()" | equals "" | verify-true
        get-property "getChildren().Control[1].getChildren().Control[3].getChildren().length" | equals 2 | verify-true
        get-property "getChildren().Control[1].getChildren().Control[3].getChildren().Control[0].getText()" 
            | equals "Use predefined syntax coloring:" | verify-true
        get-property "getChildren().Control[1].getChildren().Control[3].getChildren().Control[1].getText()" 
            | equals default | verify-true
            
       //check text     
        get-property "getChildren().Control[2].getText()" | equals "Preview:" | verify-true

         
        get-property "getChildren().Control[4].getText()" | equals "" | verify-true
        
        //check buttons
        get-property "getChildren().Control[5].getChildren().length" | equals 2 | verify-true
        get-property "getChildren().Control[5].getChildren().Control[0].getText()" | equals "Restore &Defaults" 
            | verify-true
        get-property "getChildren().Control[5].getChildren().Control[1].getText()" | equals "&Apply" | verify-true
    }
    //check values in combo
     with [get-group "" | get-combo -after [get-label "Use predefined syntax coloring:"]] {
        get-property "values[0]" | equals default | verify-true
        get-property "values[1]" | equals heliophobia | verify-true
        get-property "values[2]" | equals custom | verify-true
    }
    
}

//click on Section headres
get-window Preferences | get-list | select "Section headers"
set-dialog-result Color
get-window Preferences | get-button -after [get-label "Syntax Coloring"] -index 3 | click

//check bold and italic
check-bold-and-italic-preference


get-window Preferences | get-list | select "Keyword\\/Test Cases definition headers"
check-bold-and-italic-preference -bold true -italic false

get-window Preferences | get-list | select "Given\\/When\\/And\\/Then"
check-bold-and-italic-preference -bold true

get-window Preferences | get-list | select Comments
check-bold-and-italic-preference

get-window Preferences | get-list | select "Undefined tables"
check-bold-and-italic-preference -bold false -italic true

get-window Preferences | get-list | select "Keyword calls"
check-bold-and-italic-preference -bold true -italic false


get-window Preferences | get-list | select "Section headers"
check-bold-and-italic-preference

//select Settings
get-window Preferences | get-list | select Settings
check-bold-and-italic-preference

get-window Preferences | get-list | select "Special items"
check-bold-and-italic-preference -bold true

get-window Preferences | get-list | select Variables
check-bold-and-italic-preference

get-window Preferences | get-list | select Tasks
check-bold-and-italic-preference -bold true

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
