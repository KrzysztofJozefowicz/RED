--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: ParametersInContentAssist
Element-Type: context
Element-Version: 2.0
Id: _cBeEIMN4Eeat3OoBX2X2jQ
Runtime-Version: 2.1.0.201606221726
Save-Time: 1/11/17 4:59 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

//	"${/}"
//	"${:}"
//	"${\\n}"
//	"${CURDIR}"
//	"${DEBUG_FILE}"
//	"${EMPTY}"
//	"${EXECDIR}"
//	"${False}"
//			//"${KEYWORD_MESSAGE}"    		//user KW teradownd
//			//"${KEYWORD_STATUS}"			//user KW teradownd
//	"${LOG_FILE}"
//	"${LOG_LEVEL}"
//	"${None}"
//	"${null}"
//	"${OUTPUT_DIR}"
//	"${OUTPUT_FILE}"
//	"${PREV_TEST_MESSAGE}"
//	"${PREV_TEST_NAME}"
//	"${PREV_TEST_STATUS}"
//	"${REPORT_FILE}"
//	"${SPACE}"
//	"${SUITE_DOCUMENTATION}"
//			// "${SUITE_MESSAGE}"			//suite tearadow
//	"${SUITE_NAME}"
//	"${SUITE_SOURCE}"
//			//	"${SUITE_STATUS}"       	//suite tearadow
//	"${SUMMARY_FILE}"
//	"${TEMPDIR}"
//			//"${TEST_DOCUMENTATION}"  		//test case
//			//	"${TEST_MESSAGE}"			//Test Teardown setting and test case teardown
//			//	"${TEST_NAME}"  			//test case
//			//	"${TEST_STATUS}"   			//suite/test teardown and test case teardown
//	"${True}" 

global [val common_first_vars [list "${/}"
		"${:}"
		"${\\n}"
		"${CURDIR}"
		"${DEBUG_FILE}"
		"${EMPTY}"
		"${EXECDIR}"
		"${False}"
		"${LOG_FILE}"
		"${LOG_LEVEL}"
		"${None}"
		"${null}"
		"${OUTPUT_DIR}"
		"${OUTPUT_FILE}"
		"${PREV_TEST_MESSAGE}"
		"${PREV_TEST_NAME}"
		"${PREV_TEST_STATUS}"
		"${REPORT_FILE}"
		"${SPACE}"
		"${SUITE_DOCUMENTATION}" ]]

global [val common_vars [list  "${SUITE_NAME}"
		"${SUITE_SOURCE}"
		"${SUMMARY_FILE}"
		"${TEMPDIR}"
		"${True}" ]]
		

global [val test_tearodown_setting_vars [list "${SUITE_NAME}"
		"${SUITE_SOURCE}"
		"${SUMMARY_FILE}"
		"${TEMPDIR}"
			"${TEST_MESSAGE}"	
			"${TEST_STATUS}"   
		"${True}"]]
		
	
global [val suite_tearodown_setting_vars [list
			 "${SUITE_MESSAGE}"		
		"${SUITE_NAME}"
		"${SUITE_SOURCE}"
			"${SUITE_STATUS}"  
		"${SUMMARY_FILE}"
		"${TEMPDIR}"
		"${True}"]]
		

global [val test_cases_vars [list "${SUITE_NAME}"
		"${SUITE_SOURCE}"
		"${SUMMARY_FILE}"
		"${TEMPDIR}"
			"${TEST_DOCUMENTATION}"  //test case
			"${TEST_NAME}"  //test case
		"${True}"]]
		

global [val user_keyword_teardown_vars [list "${/}"
		"${:}"
		"${\\n}"
		"${CURDIR}"
		"${DEBUG_FILE}"
		"${EMPTY}"
		"${EXECDIR}"
		"${False}"
			"${KEYWORD_MESSAGE}"    //user KW teradownd
			"${KEYWORD_STATUS}"			//user KW teradownd
		"${LOG_FILE}"
		"${LOG_LEVEL}"
		"${None}"
		"${null}"
		"${OUTPUT_DIR}"
		"${OUTPUT_FILE}"
		"${PREV_TEST_MESSAGE}"
		"${PREV_TEST_NAME}"
		"${PREV_TEST_STATUS}"
		"${REPORT_FILE}"
		"${SPACE}"
		"${SUITE_DOCUMENTATION}"
		"${SUITE_NAME}"
		"${SUITE_SOURCE}"
		"${SUMMARY_FILE}"
		"${TEMPDIR}"
		"${True}"]]

global [val common_lists [list "@{EMPTY}"]]
global [val common_dicts [list "&{EMPTY}" "&{SUITE_METADATA}"]]


global [val assist_source "source" ]

proc "compare-variables" [val all_variables] {
	$all_variables| each [val element] [val index] {
	
		if [$assist_source | eq source ]{
			get-window  -from "CompletionProposalPopup.createProposalSelector()" | get-table 
			    | get-property [format "getItems().TableItem[%s].getText()" [plus $start_index $index]]| equals $element | verify-true
	
			if [$count_items| eq true]{	
				get-window  -from "CompletionProposalPopup.createProposalSelector()"  | get-table | get-property itemCount
						 | equals [plus $start_index [$all_variables| invoke getElements | invoke size]] | verify-true	
		
			}			
		}-else{
			get-window  -class ContentProposalPopup| get-table 
			    | get-property [format "getItems().TableItem[%s].getText()" [plus $start_index $index]]| equals $element | verify-true
	
			if [$count_items| eq true]{	
				get-window -class ContentProposalPopup | get-table | get-property itemCount
						 | equals [plus $start_index [$all_variables| invoke getElements | invoke size]] | verify-true	
		
			}
		
		}
	}
}	


proc "check_common-automatic-variables" [val start_index 0] [val count_items true]{
	compare-variables [emit [$common_first_vars |each [val item]{ echo $item }] [$common_vars| each [val item2]{ echo $item2}] 
		| to-list]
}			

proc "check-automatic-variables-for-test-teardown" [val start_index 0] [val count_items true] {
	compare-variables [emit [$common_first_vars |each [val item]{ echo $item }] [$test_tearodown_setting_vars| each [val item2]{ echo $item2}] 
		| to-list]	
}	

proc "check-automatic-variables-for-suite-teardown" [val start_index 0] [val count_items true] {
	compare-variables [emit [$common_first_vars |each [val item]{ echo $item }] [$suite_tearodown_setting_vars| each [val item2]{ echo $item2}] 
		| to-list]	
}	

proc "check-automatic-variables-for-test-case" [val start_index 0] [val count_items true] {
	compare-variables [emit [$common_first_vars |each [val item]{ echo $item }] [$test_cases_vars | each [val item2]{ echo $item2}] 
		| to-list]	
}	

proc "check-automatic-variables-for-keyword-teardown" [val start_index 0] [val count_items true] {
	compare-variables -all_variables $user_keyword_teardown_vars

}

proc "check-automatic-lists" [val start_index 0] [val count_items true]{
	compare-variables -all_variables $common_lists
}

proc "check-automatic-dicts" [val start_index 0] [val count_items true]{
	compare-variables -all_variables $common_dicts
}


proc "check-automatic-lists-for-test-case" [val start_index 0] [val count_items true]{
	compare-variables -all_variables [list "@{EMPTY}" " @{TEST_TAGS}"]
}

proc "check-all-variables-types"  [val start_index 0] [val count_items true]{
	compare-variables [ emit [$common_first_vars |each [val item]{ echo $item }] 
		[$common_vars| each [val item2]{ echo $item2}] 
		[$common_lists| each [val item3]{ echo $item3}]  
		[$common_dicts| each [val item4]{ echo $item4}]| to-list ]


}
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
