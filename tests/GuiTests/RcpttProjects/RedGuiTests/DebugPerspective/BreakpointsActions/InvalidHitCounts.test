--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: InvalidHitCounts
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _JakZoB39EeehL98jfxP8Sw
Runtime-Version: 2.1.0.201606221726
Save-Time: 4/11/17 3:28 PM
Tags: Debug
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

proc "chek-hit-count-error" [val count]{
	get-window "Invalid value" 
	    | get-label "Value.*" 
	    | get-property caption | equals [format "Value '%s' is invalid '1' will be used instead.\n\n"
	    + "Reason:\n"
	    + "Hit count has to be a number greater than zero and less than 2^31" $count ]| verify-true
	get-window "Invalid value" | get-button OK | click	 
	
	//check if value was set to 1 
	get-view Breakpoints | get-editbox | get-property text | equals 1 | verify-true  
}

proc "set-hit-count-value" [val value]{
	with [get-view Breakpoints | get-editbox] {
	    set-text $value
	    key-type "M1+s"
	}
}
//set test
get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | double-click
get-editor "TestFile.robot" | get-text-viewer | set-text "*** Variables ***\n"
    + "@{NUMBERS}      ${1}    ${2}    ${5}  \n"
    + "*** Test Cases ***\n"
    + "Continue Example\n"
    + "    my keyword\n"
    + "    my keyword\n"
    + "    my keyword\n"
    + "    \n"
    + "    :FOR    ${x}   IN RANGE   1   55\n"
    + "    \\    second kw\n"
    + "    \\    log  ${x}\n"
    + "*** Keywords ***\n\n"
    + "my keyword\n"
    + "    log  8\n"
    + "    [Return]    True\n"
    + "    \n"
    + "second kw\n"
    + "    Should Be Equal    1    1" 
    
get-button "Save \((Ctrl|M1)\+S\)" | click

//go to perpsective
get-button "Open Perspective" | click
get-window "Open Perspective" | get-table | select Debug | double-click

//add BP
get-editor "TestFile.robot" | get-left-ruler | get-ruler-column AnnotationColumn | double-click-ruler 6

//check hit counts
with [get-view Breakpoints] {
    click
    get-tree | select "TestFile.robot [line: 6]"
    get-button "Hit count:" | check
}

set-hit-count-value -value 0
chek-hit-count-error -count 0

set-hit-count-value -value "88888888888888888888888"
chek-hit-count-error -count "88888888888888888888888"

set-hit-count-value -value "text"
chek-hit-count-error -count "text"


//add wrong value and then remove BP - here BP view was dirty
with [get-view Breakpoints] {
    get-editbox | set-text 56
    get-button "Remove Selected Breakpoints (Delete)" | click
    get-control Any -index 17 | key-type "M1+s"
}
get-view Breakpoints | get-editbox | get-property text | equals "" | verify-true


//add new 2 BPs
with [get-editor "TestFile.robot" | get-left-ruler | get-ruler-column AnnotationColumn] {
    click-ruler -line 6
    double-click-ruler 6
    double-click-ruler 11
}

//got to first BP and add incorrect value
with [get-view Breakpoints] {
    get-tree | select "TestFile.robot [line: 6]"
    get-button "Hit count:" | check
    get-editbox | set-text wrong
    
    //go to second BP - error will be shown
    get-tree | select "TestFile.robot [line: 11]"
}
chek-hit-count-error -count "wrong"

//check that selection is still on second BP
get-view Breakpoints | get-tree | get-property "selection[0].path[0]" | equals "TestFile.robot [line: 11]" | verify-true

//go to first and check if default value was set
get-view Breakpoints | get-tree | select "TestFile.robot [line: 6] [hit count: 1]"
with [get-view Breakpoints] {
    get-button "Hit count:" | get-property selected | equals true | verify-true
    get-editbox | get-property text | equals 1 | verify-true
}

//set correct value and go to seconf BP
with [get-view Breakpoints] {
    get-editbox | set-text 89
    get-tree | select "TestFile.robot [line: 11]"
}
//back to first - check that value was saved
get-view Breakpoints | get-tree | select "TestFile.robot [line: 6] [hit count: 89]"
get-view Breakpoints | get-editbox | get-property text | equals 89 | verify-true

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
