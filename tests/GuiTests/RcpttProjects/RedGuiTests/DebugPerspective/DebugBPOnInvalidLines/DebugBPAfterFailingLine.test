--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _OCxtEBRGEeWWV9IuysVI_A,_NvY3ABRGEeWWV9IuysVI_A,_d8aMACuvEeW667Afdo4DcA
Element-Name: DebugBPAfterFailingLine
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _EJvdYBEPEeWWSplrwZ3vkg
Runtime-Version: 2.1.0.201606221726
Save-Time: 9/15/17 10:14 AM
Tags: Debug
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//open script
with [get-view "Project Explorer" | get-tree] {
    select ScriptWithResource | double-click
    select "ScriptWithResource/BigScript.robot" | double-click
}

get-editor "BigScript.robot" | get-text-viewer | set-text "*** Settings ***\n"
    + "Library  String\n"
    + "Library  Collections\n"
    + "Resource  my_keywords.robot\n"
    + "Test Setup  my_setup\n"
    + "Test Teardown  Join text\n\n"
    + "*** Variables ***\n"
    + "${x}    5\n"
    + "${long_name_global_value}    I have a space and \\t single tab\n\n\n"
    + "*** Test Cases ***\n\n"
    + "failing test\n"
    + "\t[TAGs]  NOT_WORKING\n"
    + "\t#Thi test will fail\n"
    + "   Log  lol\n"
    + "   Should Be True   True\n"
    + "   Should Be Empty  \"I am not empty haha!\"\n"
    + "   Should Be True   True\n\n\n"
    + "convert to lower case\n"
    + "\t${small_letter} =   convert text   MONITOR\n"
    + "\tShould Be Equal  ${small_letter}  monitor\n\n"
    + "make dict\n"
    + "\t${dict} = \tCreate Dictionary \tname \tvalue\n"
    + "\t${values} = \tGet Dictionary Values \t${dict}\n"
    + "\tSet To Dictionary \t${dict} \tnowy \tldlld\n"
    + "\t\n"
    + "\t\n"
    + "*** Keywords ***\n\n"
    + "Sum Two Values\n"
    + "    [Arguments]    ${expression}    ${expected}\n"
    + "    \n"
    + "    Should Contain  text5  ${expected}\n"
    + "    Should be equal   ${expression}    ${expected}\n"
    + "    ${a}=    Set Variable    inna\n\n"
    + "    Should Contain  text  x\n"
    + "    \n"
    + "    Log   ${expression}=6\n"
    + "    \n"
    + "convert text\n"
    + "\t[Arguments]    ${text}\n"
    + "\tLog  ${text}\n"
    + "    ${text}=  Convert To Lowercase  ${text}\n"
    + "  \t[Return]  ${text}\n\n"
    + "REVERSE MY LIST\n"
    + "\t@{list_to_revert}=  Create List  1  2\n"
    + "\tReverse List  ${list_to_revert}\n"
    + "\tLog  ${list_to_revert}\n\n"
    + "My loop\n"
    + "\t:FOR  ${i}  in range  2\n"
    + "\t\\\t\n"
    + "\t\\ \t${eval}=  Evaluate  ${i} +5\n"
    + "\t\n"
    + "\t\n"
    + "my_setup\n"
    + "\tLog  setup my\n"
    + "\t\n"
    + "KW for loop\n"
    + "    Log  kw for loop"
    
get-button "Save \((Ctrl|M1)\+S\)" | click   
//Select line after failing line
get-editor "BigScript.robot" | get-left-ruler | get-ruler-column AnnotationColumn | double-click-ruler 21

//run test
with [get-view "Project Explorer" | get-tree] {
	select "ScriptWithResource/BigScript.robot" | get-menu "Debug As/1 Robot Test" | click
}

//check if test still works
try -times 10 -delay 300 -command {
	get-view Debug | get-tree | get-item "<terminated>BigScript.robot \\[Robot\\]" | get-property caption 
	    | equals "<terminated>BigScript.robot [Robot]" | verify-true
}

get-view Console | get-button Terminate | get-property enablement | equals false | verify-true
get-view Variables | get-tree | get-property itemCount | equals 0 | verify-true

get-button "Resume( \(F8\))?" | get-property containMenu | equals false | verify-true
get-button Suspend | get-property enablement | equals false | verify-true

get-button "Terminate( \(M1+F2\))?" | get-property enablement | equals false | verify-true
get-button "Step Into( \(F5\))?" | get-property enablement | equals false | verify-true
get-button "Step Over( \(F6\))?" | get-property enablement | equals false | verify-true
get-button "Step Return( \(F7\))?"  | get-property enablement | equals false | verify-true
    
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
