--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _QxfxAKjOEeWg6OFh_tHgTw
Element-Name: ExcludeProjectFromValidation
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _6W7CgPgkEea7hL0QdGOb6w
Runtime-Version: 2.1.0.201606221726
Save-Time: 3/2/17 12:19 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//select first project to exclude
with [get-view "Project Explorer" | get-tree] {
    select RobotProject | get-menu "Robot Framework/Exclude from validation" | click
}

try -times 4 -delay 5000 -command{
	get-view "Project Explorer" | get-tree | get-item "RobotProject \\[excluded\\]" | get-property caption 
    	| equals "RobotProject [excluded]" | verify-true
}
//get-view "Project Explorer" | get-tree | select "RobotProject [excluded]" | click
//open red.xml
with [get-view "Project Explorer" | get-tree] {
    select "RobotProject \\[excluded\\]" | double-click
    select "RobotProject \\[excluded\\]/red.xml" | double-click
}

wait-for-loading-red-xml -editor_name "RobotProject/red.xml" 

//check if in red.xml project was excluded
get-editor "RobotProject/red.xml" | get-tab-folder | get-tab-item Validation | click
with [get-editor "RobotProject/red.xml" | get-section "Excluded project parts" | get-tree] {
    get-item "RobotProject \\[excluded\\]" | get-property caption | equals "RobotProject [excluded]" | verify-true
    get-item "RobotProject \\[excluded\\]" | get-property childCount | equals 0 | verify-true
}

//check label on PE
get-view "Project Explorer" | get-tree | get-item "RobotProject \\[excluded\\]" | get-property caption 
    | equals "RobotProject [excluded]" | verify-true
 
//check if all error were removed from problems for this project 
get-view Problems | get-tree | get-item "Errors \\(1 item\\)/Unknown keyword 'kw from file_with_error'" 
    | get-property caption | equals "Unknown keyword 'kw from file_with_error'" | verify-true    
    
//close red.xml and include project from PE    
get-editor "RobotProject/red.xml" | close
with [get-view "Project Explorer" | get-tree] {
    select "RobotProject [excluded]" | get-menu "Robot Framework/Include for validation" | click
    wait 1000
    select "RobotProject/red.xml" | double-click
}

//check in opened red.xml that all items from project are visible 
with [get-editor "RobotProject/red.xml" | get-section "Excluded project parts" | get-tree] {
	wait 1000
    get-item RobotProject | get-property caption | equals RobotProject | verify-true
    get-item RobotProject | get-property childCount | equals 10 | verify-true
}

//check if all problems are back
get-view Problems | get-label "8 errors, 0 warnings, 0 others" | get-property caption 
    | equals "8 errors, 0 warnings, 0 others" | verify-true
    
//exclude project from red.xml
get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | double-click
get-editor "RobotProject/red.xml" | get-section "Excluded project parts" | get-tree | select RobotProject 
    | get-menu Exclude | click

//check label and if all items are removed
with [get-editor "RobotProject/red.xml" | get-section "Excluded project parts" | get-tree] {
    get-item "RobotProject \\[excluded\\]" | get-property caption | equals "RobotProject [excluded]" | verify-true
    get-item "RobotProject \\[excluded\\]" | get-property childCount | equals 0 | verify-true
}

get-button "Save \((Ctrl|M1)\+S\)" | click

//check problems
get-view Problems | get-label "1 error, 0 warnings, 0 others" | get-property caption 
    | equals "1 error, 0 warnings, 0 others" | verify-true
    
//check label on PE
get-view "Project Explorer" | get-tree | get-item "RobotProject \\[excluded\\]" | get-property caption 
    | equals "RobotProject [excluded]" | verify-true
    
//create new empty project
get-menu "File/New/Robot Project" | click
with [get-window "New Robot project"] {
    get-editbox -after [get-label "Project name:"] | set-text empty
    get-button Finish | click
}

//exclude it - here was exception
with [get-view "Project Explorer" | get-tree] {
    select empty | get-menu "Robot Framework/Exclude from validation" | click
}

//check if was excluded in red.xml before saving
with [get-view "Project Explorer" | get-tree] {
    select "empty \\[excluded\\]" | double-click
    select "empty \\[excluded\\]/red.xml" | double-click
}
wait-for-loading-red-xml -editor_name "empty/red.xml"
get-editor "empty/red.xml" | get-tab-folder | get-tab-item Validation | click
with [get-editor "empty/red.xml" | get-section "Excluded project parts" | get-tree] {
    get-item "empty \\[excluded\\]" | get-property caption | equals "empty [excluded]" | verify-true
    get-item "empty \\[excluded\\]" | get-property childCount | equals 0 | verify-true
}

//check label on PE
get-view "Project Explorer" | get-tree | get-item "empty \\[excluded\\]" | get-property caption 
    | equals "empty [excluded]" | verify-true
    
//check if no error was removed    
get-view Problems | get-label "8 errors, 0 warnings, 0 others" | get-property caption 
    | equals "8 errors, 0 warnings, 0 others" | verify-true
    
//include and save
with [get-editor "empty/red.xml" | get-section "Excluded project parts" | get-tree] {
    select "empty [excluded]" | get-menu Include | click
    key-type "M1+s"
}
//check if label was removed from PE
get-view "Project Explorer" | get-tree | get-item empty | get-property caption | equals empty | verify-true

//exclude from red.xml
with [get-editor "empty/red.xml" | get-section "Excluded project parts" | get-tree] {
    select empty | get-menu Exclude | click
    key-type "M1+s"
}

//check label
with [get-view "Project Explorer" | get-tree] {
    get-item "empty \\[excluded\\]" | get-property caption | equals "empty [excluded]" | verify-true
    get-item SecondProject | get-property caption | equals SecondProject | verify-true
}

//remove exclude project
get-view "Project Explorer" | get-tree | select "empty [excluded]" | get-menu Delete | click
get-window "Delete Resources" | get-button OK | click


------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
