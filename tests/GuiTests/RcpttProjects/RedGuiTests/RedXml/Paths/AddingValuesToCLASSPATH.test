--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _Wjy7oOFJEeWu0tyN3Pwjmg
Element-Name: AddingValuesToCLASSPATH
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _Fh1mIAFsEeaQD_aaetnnqw
Runtime-Version: 2.1.0.201606221726
Save-Time: 9/14/17 2:31 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//open red.xml and check if CLASSPATH is disabled
get-view "Project Explorer" | get-tree | select "jython_simple_project/red.xml" | double-click
wait-for-loading-red-xml "jython_simple_project/red.xml"

get-editor "jython_simple_project/red.xml" | get-tab-folder | get-tab-item "Referenced libraries" | click
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | get-property enablement 
    | equals false | verify-true

//change interpreter to jython    
with [get-editor "jython_simple_project/red.xml"] {
    get-tab-folder | get-tab-item General | click
    with [get-section "Robot framework"] {
        get-button "Use local settings for this project" | check
        with [get-table] {
            get-item "Robot Framework .*\\(Jython .*\\)" | check
            key-type "M1+s"
        }
    }
    get-tab-folder | get-tab-item "Referenced libraries" | click
}

//check if now user can add CLASSPATH
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | get-property enablement 
    | equals true | verify-true

//add path 
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | get-item "...add new search path" 
    | double-click
with [get-window "Add new search path"] {
    with [get-editbox 
        -after [get-label "Provide search paths to be added. Each path should be specified in separate line."]] {
        click-text
        set-text [format "%s/jython_simple_project/RED_TEST_JavaLib.jar" $RED_workspace_path]
    }
    get-button OK | click
}
//save file and run test
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | key-type "M1+s"
get-view "Project Explorer" | get-tree | select "jython_simple_project/test.robot" | double-click
get-view "Project Explorer" | get-tree | select "jython_simple_project/test.robot" | get-menu "Run As/1 Robot Test" 
    | click


wait-for-console -times 10 -delay 2000

//check console
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
	replace -input $RED_workspace_path -old "\\" -new "\\\\" | let[val new_ws_path -input]{  
		let [val rp [format "((.*\\\\LibsFromPythonPath;\.;%s\\\\jython_simple_project\\\\RED_TEST_JavaLib.jar)|(.*.*\\\\LibsFromPythonPath;%s\\\\jython_simple_project\\\\RED_TEST_JavaLib.jar;\.))" $new_ws_path $new_ws_path]]{
			get-view Console | get-text-viewer | get-object |invoke getLine  0 
			| matches [format "Command: .*jython.exe -J-Dpython\.path=.*\\\\site-packages -J-cp %s -m .* --listener .*" $rp]
			| verify-true
		}
	}
}-else{
	let [val rp [format  "((.*/LibsFromPythonPath:\.:%s/jython_simple_project/RED_TEST_JavaLib.jar)|(.*/LibsFromPythonPath:%s/jython_simple_project/RED_TEST_JavaLib.jar:\.))"  $RED_workspace_path $RED_workspace_path]]{
		get-view Console | get-text-viewer | get-object |invoke getLine  0 
			| matches [format "Command: .*jython -J-Dpython\.path=.*/site-packages -J-cp %s -m .* --listener .*" $rp]
			| verify-true
	}
}

set-dialog-result File [get-arg-file-path]
	get-menu "File/Open File..." | click   
	
get-editor "args_.*.arg" | get-text-viewer | get-property text | equals "# arguments automatically generated\n"
    + "--suite Jython_simple_project.Test" | verify-true
get-editor "args_.*.arg" | close 

get-view Console | get-text-viewer | get-property text 
    | equals "Command: .*\n"
    + "Suite Executor: Robot Framework .* \(Jython .*\)\n"
    + "==============================================================================\n"
    + "Jython Simple Project                                                         \n"
    + "==============================================================================\n"
    + "Jython Simple Project.Test                                                    \n"
    + "==============================================================================\n"
    + "t1                                                                    \| PASS \|\n"
    + "------------------------------------------------------------------------------\n"
    + "Jython Simple Project.Test                                            \| PASS \|\n"
    + "1 critical test, 1 passed, 0 failed\n"
    + "1 test total, 1 passed, 0 failed\n"
    + "==============================================================================\n"
    + "Jython Simple Project                                                 \| PASS \|\n"
    + "1 critical test, 1 passed, 0 failed\n"
    + "1 test total, 1 passed, 0 failed\n"
    + "==============================================================================\n"
    + "Output:  .*output.xml\n"
    + "Log:     .*log.html\n"
    + "Report:  .*report.html"| verify-true
    

//add new items to CLASSPATH  (double a)
get-editor "jython_simple_project/red.xml" | click
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | select [get-item "...add new search path" ]
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1 | get-item "...add new search path" 
    | double-click
with [get-window "Add new search path"] {
    with [get-editbox 
        -after [get-label "Provide search paths to be added. Each path should be specified in separate line."]] {
        set-text "folder/folder2\n\n"
            + "/new/folder\n"
            + "a\n"
            + "a"
    }
    get-button OK | click
}

//check if 5 items were added (new empty line is omitted)
with [get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1] {
    get-property itemCount | equals 6 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals ".*LibsFromPythonPath \[already defined in CLASSPATH variable\]"| verify-true
    get-property "getItems().TableItem[1].getText()" 
        | equals [format "%s/jython_simple_project/RED_TEST_JavaLib.jar" $RED_workspace_path] | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "folder/folder2" | verify-true
    get-property "getItems().TableItem[3].getText()" | equals "/new/folder" | verify-true
    get-property "getItems().TableItem[4].getText()" | equals a | verify-true
    get-property "getItems().TableItem[5].getText()" | equals "...add new search path" | verify-true
}

//change item
with [get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1] {
    select "folder\\/folder2" | double-click
    select "folder\\/folder2" | activate-cell-edit
    with [get-editbox] {
        set-text "changed_folder/new"
        key-type Enter
    }
    apply-cell-edit -deactivate
    select a | double-click
    select a | activate-cell-edit
    with [get-editbox] {
        set-text b
        key-type Enter
    }
    apply-cell-edit -deactivate
}
with [get-editor "jython_simple_project/red.xml" | get-section Paths | get-table -index 1] {
    get-property itemCount | equals 6 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals [format "%s%sTestData%sLibsFromPythonPath [already defined in CLASSPATH variable]" $RCPTT_project_path $sys_sep $sys_sep] | verify-true
    get-property "getItems().TableItem[1].getText()" 
        | equals [format "%s/jython_simple_project/RED_TEST_JavaLib.jar" $RED_workspace_path ]| verify-true
    get-property "getItems().TableItem[2].getText()" | equals "changed_folder/new" | verify-true
    get-property "getItems().TableItem[3].getText()" | equals "/new/folder" | verify-true
    get-property "getItems().TableItem[4].getText()" | equals b | verify-true
    get-property "getItems().TableItem[5].getText()" | equals "...add new search path" | verify-true
}

//add Python path
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table | get-item "...add new search path" 
    | double-click
with [get-window "Add new search path"] {
    get-editbox -after [get-label "Provide search paths to be added. Each path should be specified in separate line."] 
        | set-text "my_python_path"
    get-button OK | click
}
get-button "Save \((Ctrl|M1)\+S\)" | click

//run test and check if pathon path was added
get-view "Project Explorer" | get-tree | select "jython_simple_project/test.robot" 
    | select "jython_simple_project/test.robot" | get-menu "Run As/1 Robot Test" | click   

wait-for-console -times 10 -delay 2000

//checking first line:
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
	replace -input $RED_workspace_path -old "\\" -new "\\\\" | let[val new_ws_path -input]{    
		let [val rp [format "(%s\\\\b|\\\\new\\\\folder|%s\\\\changed_folder\\\\new|\.|%s\\\\jython_simple_project\\\\RED_TEST_JavaLib.jar)" $new_ws_path $new_ws_path $new_ws_path]]{
			get-view Console | get-text-viewer | get-object |invoke getLine  0
			| matches [format "Command: .*jython.exe -J-Dpython.path=.*\\\\site-packages -J-cp %s\\\\TestData\\\\LibsFromPythonPath;%s;%s;%s;%s;%s.* -m robot.run --listener .* --argumentfile .* %s\\\\jython_simple_project" [replace $RCPTT_project_path -old "\\" -new "\\\\"]  $rp $rp $rp $rp $rp $new_ws_path]
			| verify-true
		}
	
	}
}-else{ 
	let [val rp [format "(%s/b|/new/folder|%s/changed_folder/new|\.|%s/jython_simple_project/RED_TEST_JavaLib.jar)" $RED_workspace_path $RED_workspace_path $RED_workspace_path]]{
		get-view Console | get-text-viewer | get-object |invoke getLine  0
		| matches [format "Command: .*jython -J-Dpython.path=.*/site-packages -J-cp %s/TestData/LibsFromPythonPath:%s:%s:%s:%s:%s.* -m robot.run --listener .* --argumentfile .* %s/jython_simple_project" $RCPTT_project_path $rp $rp $rp $rp $rp $RED_workspace_path]
		| verify-true
	}	
}
set-dialog-result File [get-arg-file-path]
	get-menu "File/Open File..." | click   
	
get-editor "args_.*.arg" | get-text-viewer | get-property text | equals [format "# arguments automatically generated\n"
    + "--pythonpath %s%smy_python_path\n"
    + "--suite      Jython_simple_project.Test" $RED_workspace_path $sys_sep]| verify-true
get-editor "args_.*.arg" | close 

replace -input $RED_workspace_path -old "\\" -new "\\\\" | let[val new_ws_path -input]{
	get-view Console | get-text-viewer | get-property text 
	    | equals [format "Command: .*\n"
	    + "Suite Executor: Robot Framework .* \(Jython .*\)\n"
	    + "==============================================================================\n"
	    + "Jython Simple Project                                                         \n"
	    + "==============================================================================\n"
	    + "Jython Simple Project.Test                                                    \n"
	    + "==============================================================================\n"
	    + "t1                                                                    \| PASS \|\n"
	    + "------------------------------------------------------------------------------\n"
	    + "Jython Simple Project.Test                                            \| PASS \|\n"
	    + "1 critical test, 1 passed, 0 failed\n"
	    + "1 test total, 1 passed, 0 failed\n"
	    + "==============================================================================\n"
	    + "Jython Simple Project                                                 \| PASS \|\n"
	    + "1 critical test, 1 passed, 0 failed\n"
	    + "1 test total, 1 passed, 0 failed\n"
	    + "==============================================================================\n"
	    + "Output:  .*output.xml\n"
	    + "Log:     .*log.html\n"
	    + "Report:  .*report.html" $new_ws_path ]| verify-true
	    
}	
  
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
