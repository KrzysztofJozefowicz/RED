--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _Wjy7oOFJEeWu0tyN3Pwjmg
Element-Name: RelatviePathChangedToProjectInCLASSPATH
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _SvnIcAiSEearkLC-7wHL-g
Runtime-Version: 2.0.2.201511100828
Save-Time: 4/25/16 4:46 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//restore pref
get-preferences-menu | click
with [get-window Preferences] {
    get-button Discover | click
    get-table | get-item "Robot Framework .*\\(Python .*\)" | check
    get-button OK | click
    get-window "Rebuild required" | get-button OK | click
}


//open red.xml
get-view "Project Explorer" | get-tree | select "jython_simple_project/red.xml" | double-click

try -times 10 -delay 1000 -command{
	get-editor "jython_simple_project/red.xml" | get-canvas -after [get-label "RED Project"] | get-property "isBusy()" | equals false 
    | verify-true
}

//changed to jython
with [get-editor "jython_simple_project/red.xml"] {
    with [get-section "Robot framework"] {
        get-button "Use local settings for this project" | check
        with [get-table] {
            get-item "Robot Framework .*\\(Jython .*\\)" | check
            key-type "M1+s"
        }
    }
    get-tab-folder | get-tab-item "Referenced libraries" | click
    get-section Paths | get-table -after [get-label "Relative paths defined below are relative to:"] -index 1 
        | get-item "...add new search path" | double-click
}
//add jar name
with [get-window "Add new search path"] {
    with [get-editbox 
        -after [get-label "Provide search paths to be added. Each path should be specified in separate line."]] {
        click-text
        set-text "RED_TEST_JavaLib.jar"
    }
    get-button OK | click
}
get-editor "jython_simple_project/red.xml" | get-section Paths | get-table 
    -after [get-label "Relative paths defined below are relative to:"] -index 1 | key-type "M1+s"
    
//run test    
get-view "Project Explorer" | get-tree | select "jython_simple_project/test.robot" | get-menu "Run As/1 Robot Test" 
    | click

try -times 10 -delay 1000 -command{
	get-view Console | get-button Terminate | get-property "isEnabled()" | equals false | verify-true
}    
//check console    
get-view Console | get-text-viewer | get-property text 
    | contains "test.robot': Importing test library 'MathOperator' failed: ImportError: No module named MathOperator\n"
     | verify-true
     
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{   
	replace -input $RED_workspace_path -old "\\" -new "\\\\" | let[val new_ws_path -input]{ 
		get-view Console | get-text-viewer | get-object |invoke getLine  0   
		| matches [format "Command: .* -J-Dpython.path=.*site-packages -J-cp .;%s\\\\RED_TEST_JavaLib.jar -m .* --listener .*" $new_ws_path]
		| verify-true 
	
	}
}-else{
	get-view Console | get-text-viewer | get-object |invoke getLine  0   
		| matches [format "Command: .* -J-Dpython.path=.*site-packages -J-cp .:%s/RED_TEST_JavaLib.jar -m .* --listener .*" $RED_workspace_path]
		| verify-true 
}     
//check message log

get-view "Message Log" | get-editbox | get-property text | equals "Starting test: Jython Simple Project.Test.t1\n"
    + "\d{8} (\d\d:){2}\d\d.\d{1,3} : FAIL : No keyword with name 'MathOperator.Fibonacci' found.\n"
    + "Ending test: Jython Simple Project.Test.t1" | verify-true
    
//chaned to relative path to Project     
with [get-editor "jython_simple_project/red.xml" | get-section Paths] {
    get-combo -after [get-label "Relative paths defined below are relative to:"] | select PROJECT
    get-table -after [get-label "Relative paths defined below are relative to:"] -index 1 
        | select "RED_TEST_JavaLib.jar" | key-type "M1+s"
}

//run test
get-view "Project Explorer" | get-tree | select "jython_simple_project/test.robot" | get-menu "Run As/1 Robot Test" 
    | click

try -times 10 -delay 1000 -command{
	get-view Console | get-button Terminate | get-property "isEnabled()" | equals false | verify-true
}
  
//check console  
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{   
	replace -input $RED_workspace_path -old "\\" -new "\\\\" | let[val new_ws_path -input]{ 
		get-view Console | get-text-viewer | get-object |invoke getLine  0   
		| matches [format "Command: .* -J-Dpython.path=.*site-packages -J-cp .;%s\\\\jython_simple_project\\\\RED_TEST_JavaLib.jar -m .* --listener .*" $new_ws_path]
		| verify-true 
	
	}
}-else{
	get-view Console | get-text-viewer | get-object |invoke getLine  0   
		| matches [format "Command: .* -J-Dpython.path=.*site-packages -J-cp .:%s/jython_simple_project/RED_TEST_JavaLib.jar -m .* --listener .*" $RED_workspace_path]
		| verify-true 
}         
//test is run    
get-view "Message Log" | get-editbox | get-property text | equals "Starting test: Jython Simple Project.Test.t1\n"
    + "Ending test: Jython Simple Project.Test.t1" | verify-true
    
    
    
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
