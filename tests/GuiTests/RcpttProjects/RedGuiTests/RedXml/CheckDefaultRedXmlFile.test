--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: CheckDefaultRedXmlFile
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _mHeMEKQYEeW4l-rLhvMqpg
Runtime-Version: 2.1.0.201606221726
Save-Time: 2/22/17 11:46 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | double-click
wait-for-loading-red-xml "RobotProject/red.xml"
//check tab list
with [get-editor "RobotProject/red.xml" | get-tab-folder] {
    get-property "pages[0]" | equals General | verify-true
    get-property "pages[1]" | equals "Referenced libraries" | verify-true
    get-property "pages[2]" | equals "Variable files" | verify-true
    get-property "pages[3]" | equals Validation | verify-true
    get-property activePage | equals General | verify-true
    get-property tabCount | equals 4 | verify-true
}

//tab General -------------------------------------------------------------------------------------------------------------------------------------------
// ------------- check robot framework --------------------------------------------
with [get-editor "RobotProject/red.xml" | get-section "Robot framework"] {
    get-property "getDescription()" 
        | equals "Specify which Robot Framework should be used by this project. Currently following framework is in use:" 
        | verify-true
    get-property "getChildren().length" | equals 3 | verify-true
    get-property "getChildren().Control[0].getText()" | equals "Robot framework" | verify-true
    get-property "getChildren().Control[1].getText()" 
        | equals "Specify which Robot Framework should be used by this project. Currently following framework is in use:" 
        | verify-true
    get-property "getChildren().Control[2].getChildren().length" | equals 4 | verify-true
}

//check python path and version
with [get-editor "RobotProject/red.xml" | get-section "Robot framework" | get-table] {
    get-item "Robot Framework .*" | get-property "values['Name']" 
        | equals $robot_version | verify-true
    get-item "Robot Framework .*" | get-property "values['Path']" 
        | equals $python_exe_path  | verify-true
}
//check checkbox
with [get-editor "RobotProject/red.xml" | get-section "Robot framework"] {
    with [get-button "Use local settings for this project"] {
        get-property caption | equals "Use local settings for this project" | verify-true
        get-property selected | equals false | verify-true
    }
    //check label
    get-canvas | get-property text 
        | equals [format " %s %s (from Preferences)\n" $python_exe_path $robot_version] | verify-true
}

//-------------------- varaible mapping ------------------

with [get-editor "RobotProject/red.xml"] {
    with [get-section "Variables mappings"] {
        get-property "getDescription()" 
            | equals "Define variable values. Those mappings will be used by RED in order to resolve parameterized paths in Library, Resource and Variable settings." 
            | verify-true
        get-property "getText()" | equals "Variables mappings" | verify-true
        get-property "getChildren().length" | equals 3 | verify-true
        get-property "getChildren().Control[0].getText()" | equals "Variables mappings" | verify-true
        get-property "getChildren().Control[1].getText()" 
            | equals "Define variable values. Those mappings will be used by RED in order to resolve parameterized paths in Library, Resource and Variable settings." 
            | verify-true
        get-property "getChildren().Control[2].getChildren().length" | equals 1 | verify-true
        with [get-table] {
            get-property "columns[0].caption" | equals "Variable name" | verify-true
            get-property "columns[1].caption" | equals Value | verify-true
            get-property "getItems().length" | equals 1 | verify-true
            get-property "getItems().TableItem[0].getText()" | equals "...add new mapping" | verify-true
        }
    }
}

//tab Referenced libreries  -------------------------------------------------------------------------------------------------------------------------------------------
get-editor "RobotProject/red.xml" | get-tab-folder | get-tab-item "Referenced libraries" | click

//check amount of elements
with [get-tab-folder -index 1] {
    double-click
    get-tab-item "RobotProject/red.xml" | click
}
with [get-editor "RobotProject/red.xml"] {
    with [get-section "Referenced libraries"] {
        get-property "getDescription()" 
            | equals "Specify third party libraries and/or locations for Remote standard library to be used by the project" 
            | verify-true
        get-property "getText()" | equals "Referenced libraries" | verify-true
        get-property "getChildren().length" | equals 3 | verify-true
    }
    with [get-section Paths] {
        get-property "getDescription()" 
            | equals "Specify additional paths which will be added to respective environment variables when communicating with Robot Framework" 
            | verify-true
        get-property "getText()" | equals Paths | verify-true
    }
}


//check Referenced libreries
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries"] {
    get-property "getChildren().length" | equals 3 | verify-true
    get-property "getDescription()" 
        | equals "Specify third party libraries and/or locations for Remote standard library to be used by the project" 
        | verify-true
    get-property "getText()" | equals "Referenced libraries" | verify-true
    get-property "getChildren().length" | equals 3 | verify-true
    get-property "getChildren().Control[0].getText()" | equals "Referenced libraries" | verify-true
    get-property "getChildren().Control[1].getText()" 
        | equals "Specify third party libraries and/or locations for Remote standard library to be used by the project" 
        | verify-true
    get-property "getChildren().Control[2].getChildren().length" | equals 1 | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getChildren().length" | equals 8 | verify-true
}
//check table for libs
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries"] {
    get-table | get-property itemCount | equals 0 | verify-true
    with [get-button "Add Python library"] {
        get-property enablement | equals true | verify-true
        get-property caption | equals "Add Python library" | verify-true
    }
    //check buttons
    get-button "Add Java library" | get-property enablement | equals false | verify-true
    get-button "Add libspec file" | get-property enablement | equals true | verify-true
    get-button "Add Remote location" | get-property enablement | equals true | verify-true

	//check autodiscover 
    with [get-button "Auto discover libraries after test suite save action"] {
	    get-property enablement | equals true | verify-true
	    get-property selected | equals true | verify-true
	    }
    with [get-button "Show discovering summary after test suite save action"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals false | verify-true
    }
    with [get-button "Automatically reload changed libraries"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
   
}
// Paths
with [get-editor "RobotProject/red.xml" | get-section Paths] {
	//check item count
    get-property "getChildren().length" | equals 3 | verify-true

	//check workspace combobox
    with [get-combo -after [get-label "Relative paths defined below are relative to:"]] {
        get-property enablement | equals true | verify-true
        get-property selection | equals WORKSPACE | verify-true
        get-property "values[0]" | equals WORKSPACE | verify-true
        get-property "values[1]" | equals PROJECT | verify-true
    }
    //check PYTHON table
    get-canvas | get-property text | equals "PYTHONPATH\r\n" | verify-true
    with [get-table] {
        get-property "getItems().TableItem[0].getText()" 
            | equals ".*LibsFromPythonPath \[already defined in PYTHONPATH variable\]" 
            | verify-true
        get-property "getItems().TableItem[1].getText()" | equals "...add new search path" | verify-true
    }
    //check CLASSPATH
    get-canvas -after [get-label "Relative paths defined below are relative to:"] -index 1 | get-property text 
        | equals "CLASSPATH\r\n" | verify-true
    with [get-table -after [get-label "Relative paths defined below are relative to:"] -index 1] {
        get-property "getItems().length" | equals 1 | verify-true
        get-property "getItems().TableItem[0].getText()" | equals "...add new search path" | verify-true
    }
}


//Variable files   -----------------------------------------------------------------------------------------------------------------------------------------------
get-editor "RobotProject/red.xml" | get-tab-folder | get-tab-item "Variable files" | click
with [get-editor "RobotProject/red.xml" | get-section "Variable files"] {
    get-property "getDescription()" 
        | equals "Specify global variables files. Variables from the files below will be available for all suites within the project without importing the file using Variables setting." 
        | verify-true
    get-property "getChildren().Control[1].getText()" 
        | equals "Specify global variables files. Variables from the files below will be available for all suites within the project without importing the file using Variables setting." 
        | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().length" | equals 1 | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TableItem[0].getText()" 
        | equals "...add new variable file" | verify-true
}

//Validation  -----------------------------------------------------------------------------------------------------------------------------------------------
get-editor "RobotProject/red.xml" | get-tab-folder | get-tab-item Validation | click
with [get-editor "RobotProject/red.xml" | get-section "Excluded project parts"] {
    get-property "getDescription()" | equals "Specify parts of the project which shouldn't be validated." | verify-true
    get-property "getText()" | equals "Excluded project parts" | verify-true
    get-property "getChildren().length" | equals 3 | verify-true
    get-property "getChildren().Control[0].getText()" | equals "Excluded project parts" | verify-true
    get-property "getChildren().Control[1].getText()" 
        | equals "Specify parts of the project which shouldn't be validated." | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TreeItem[0].getItems().TreeItem[0].getText()" 
        | equals TestSuiteFolder | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TreeItem[0].getItems().TreeItem[1].getText()" 
        | equals "red.xml" | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TreeItem[0].getItems().TreeItem[2].getText()" 
        | equals "TestFile.robot" | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TreeItem[0].getText()" 
        | equals RobotProject | verify-true
    with [get-control Any -index 2] {
        get-property "getTabList().Control[1].getChildren().Control[0].getText()" 
            | equals "Exclude files by size [KB] greater than:" | verify-true
        get-property "getTabList().Control[1].getChildren().Control[0].isEnabled()" | equals true | verify-true
        get-property "getTabList().Control[1].getChildren().Control[1].getText()" | equals 1024 | verify-true
        get-property "getTabList().Control[1].getChildren().Control[1].getEnabled()" | equals true | verify-true
    }
}

//close red.xml
get-editor "RobotProject/red.xml" | close

//open and check if last edited tab is open
get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | double-click
with [get-editor "RobotProject/red.xml" | get-tab-folder] {
    get-property "pages[0]" | equals General | verify-true
    get-property "pages[1]" | equals "Referenced libraries" | verify-true
    get-property "pages[2]" | equals "Variable files" | verify-true
    get-property "pages[3]" | equals Validation | verify-true
    get-property activePage | equals Validation | verify-true
    get-property tabCount | equals 4 | verify-true
}




------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
