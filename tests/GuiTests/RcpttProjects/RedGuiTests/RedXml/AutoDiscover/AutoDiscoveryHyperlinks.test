--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _eXb6MPp7EeW7_PzjO98BIw
Element-Name: AutoDiscoveryHyperlinks
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _Ys0LEIyGEeaNFdJIt_L-Rg
Runtime-Version: 2.2.0.201706152316
Save-Time: 1/8/18 9:04 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//system specific absolute path formatting

proc "format-absolute-path"  [val workspaceRelativeWindowsPath] {
	let [val workspaceRelativePath [replace -input $workspaceRelativeWindowsPath -old "\\" -new $sys_sep]] {
		echo [concat $RED_workspace_path $sys_sep $workspaceRelativePath]
	}
}

proc "format-absolute-node-path"  [val workspaceRelativeWindowsPath] {
	let [val absolutePath [format-absolute-path $workspaceRelativeWindowsPath]] {
		echo [get-by-os -win $absolutePath -linux [replace -input $absolutePath -old "/" -new "\\/"]]
	}
}

get-view "Project Explorer" | get-tree | select RobotProject 
    | get-menu "Robot Framework/Automatically discover and add libraries to red.xml" | click
    
    
//open links with double click
with [get-window "Discovering libraries summary" | get-tree] {
    select [concat "add/Source: " [format-absolute-node-path "RobotProject\\libs\\add.py"]]
        | double-click
}

with [get-window "Discovering libraries summary" | get-tree] {
    select [concat "divide/Importers: " [format-absolute-node-path "RobotProject\\tests\\lib_with_EXECDIR.robot"]]
        | double-click
}


//open links with F3
with [get-window "Discovering libraries summary" | get-tree] {
    select [concat "multiply/Importers: " [format-absolute-node-path "RobotProject\\lib_with_variable.robot"]] 
        | double-click
}

//with [get-window "Discovering libraries summary" | get-tree] {
//    select [concat "multiply/Importers:/" [format-absolute-node-path "RobotProject\\tests\\tsv_with_relative_paths.tsv"]] 
//        | key-type F3
//}


//select nodes without links
with [get-window "Discovering libraries summary" | get-tree] {
    get-item -path "..\\/libs\\/error.py/Status: Not added to project configuration" | click
    select "..\\/libs\\/error.py/Status: Not added to project configuration" | double-click
}


//check opened files
with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "add.py" | verify-true
    get-property "pages[1]" | equals "lib_with_EXECDIR.robot" | verify-true
    get-property "pages[2]" | equals "lib_with_variable.robot" | verify-true
    get-property activePage | equals "lib_with_variable.robot" | verify-true
    get-property tabCount | equals 3 | verify-true
}


//check hyperlinks formatting
proc "check-hyperlink-style"  [val item] [val styleIndex] [val startIndex] {
    get-item $item | get-property [format "styles[%s].start" $styleIndex] | equals $startIndex | verify-true
    get-item $item | get-property [format "styles[%s].underline" $styleIndex] | equals single | verify-true
    get-item $item | get-property [format "styles[%s].foregroundColor" $styleIndex] | equals [get-by-os -win "(#0066CC|#000080)" -linux "#0000EE|#2A76C6"] | verify-true
}

with [get-window "Discovering libraries summary" | get-tree] {
    check-hyperlink-style [concat "add/Source: " [format-absolute-node-path "RobotProject\\libs\\add.py"]] 1 8
    check-hyperlink-style [concat "divide/Importers: " [format-absolute-node-path "RobotProject\\tests\\lib_with_EXECDIR.robot"]] 1 11
    check-hyperlink-style [concat "multiply/Importers: " [format-absolute-node-path "RobotProject\\lib_with_variable.robot"]] 1 11
}


//check not hyperlinks formatting
proc "check-not-hyperlink-style"  [val item] {
    get-item $item | verify-error {get-property "styles[1].underline" | equals single | verify-true}
    get-item $item | verify-error {get-property "styles[1].foregroundColor" | equals "#0000FF" | verify-true}
}

with [get-window "Discovering libraries summary" | get-tree] {
    check-not-hyperlink-style "..\\/libs\\/error.py/Status: Not added to project configuration"
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
