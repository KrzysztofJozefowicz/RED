--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _BRZyQPy3EeW7_PzjO98BIw,_eXb6MPp7EeW7_PzjO98BIw
Element-Name: AutoDiscoveringLibraries
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _l6X6QPy3EeW7_PzjO98BIw
Runtime-Version: 2.0.2.201511100828
Save-Time: 4/29/16 11:45 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

proc "remove-all-libraries-from-xml"{
	get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | double-click
	with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries"] {
	    with [get-table] {
	        select ".*" -all
	        key-type Del
	    }
	}
}

proc "wait-for-discover-window"{
	try -times 6 -delay 1000 -command{
		get-window "Discovering libraries summary"
	}
}

//open test with lib that has non-existing variable
get-view "Project Explorer" | get-tree | select "RobotProject/lib_with_variable.robot" | double-click
with [get-editor "lib_with_variable.robot" | get-text-viewer] {
    set-caret-pos 8 12
    type-text 7
    key-type "M1+s"
}
wait-for-discover-window

//check that in window are 2 itmes
with [get-window "Discovering libraries summary" | get-tree] {
    get-property itemCount | equals 2 | verify-true
    get-property "getItems().TreeItem[0].getText()" | equals multiply | verify-true
    get-property "getItems().TreeItem[1].getText()" | equals "lib1.py" | verify-true
    
    //check status icons
    get-item multiply | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item "lib1.py" | get-property "image.path" 
        | equals ".*/error_fatal.png" | verify-true
}
//select Status field for multiply lib
get-window "Discovering libraries summary" | get-tree | select "multiply/Status: Added to project configuration"
//check summary for correct item
with [get-window "Discovering libraries summary"] {
    with [get-tree] {
        get-item multiply | get-property "getItemCount()" | equals 3 | verify-true
        get-item multiply | get-property "getItems().TreeItem[0].getText()" 
            | equals "Status: Added to project configuration" | verify-true
        get-item multiply | get-property "getItems().TreeItem[1].getText()" 
            | equals [concat "Source: " $RED_workspace_path $sys_sep "RobotProject" $sys_sep "multiply.py"] | verify-true
        get-item multiply | get-property "getItems().TreeItem[2].getText()" 
            | equals [concat "Importers: " $RED_workspace_path $sys_sep "RobotProject" $sys_sep "lib_with_variable.robot"] | verify-true
    }
    //check window below
    get-editbox -after [get-label "Discovered libraries (2):"] | get-property text 
        | equals "Status: Added to project configuration" | verify-true
}

//check textbox below for lib1.py
get-window "Discovering libraries summary" | get-tree 
    | select  "lib1.py/Additional info: Error in file '.*lib_with_variable.robot': Test library 'lib1.py' does not exist."
get-window "Discovering libraries summary" | get-editbox -after [get-label "Discovered libraries (2):"] 
    | get-property text 
    | equals [concat "Additional info: Error in file '" $RED_workspace_path $sys_sep "RobotProject" $sys_sep "lib_with_variable.robot': Test library 'lib1.py' does not exist."]
    | verify-true
    
//check status window     
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "lib1.py" | get-property childCount | equals 4 | verify-true
    get-item "lib1.py" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Status: Not added to project configuration" | verify-true
    get-item "lib1.py" | get-property "getItems().TreeItem[1].getText()" | equals "Source: Unknown" | verify-true
    get-item "lib1.py" | get-property "getItems().TreeItem[2].getText()" 
        | equals [concat "Importers: " $RED_workspace_path $sys_sep "RobotProject" $sys_sep "lib_with_variable.robot"] | verify-true
    get-item "lib1.py" | get-property "getItems().TreeItem[3].getText()" 
        | equals  [concat "Additional info: Error in file '" $RED_workspace_path $sys_sep "RobotProject" $sys_sep "lib_with_variable.robot': Test library 'lib1.py' does not exist."]
        | verify-true
    get-item "lib1.py" | get-property "getText()" | equals "lib1.py" | verify-true
}
get-window "Discovering libraries summary" | get-button OK | click

//check if multiply was added to red.xml
get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | select "RobotProject/red.xml" | double-click
get-editor "RobotProject/red.xml" | get-tab-folder | get-tab-item "Referenced libraries" | click
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-table] {
    get-property itemCount | equals 1 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "multiply - RobotProject" | verify-true
}
//============================================================================================================================
//open editor with libs using variable CURDIR
get-tab-folder -index 1 | get-tab-item "lib_with_variable.robot" | click
get-view "Project Explorer" | get-tree | select "RobotProject/Tests_wit_lib/lib_with_CURDIR.txt" | double-click
with [get-editor "lib_with_CURDIR.txt" | get-text-viewer] {
    set-caret-pos 6 12
    key-type BackSpace
    type-text 5
    key-type "M1+s"
}

wait-for-discover-window
//lib is added with success
get-window "Discovering libraries summary" | get-tree | get-item "discover_lib" | get-property "image.path" 
    | equals ".*/success_big.png" | verify-true

//two importers have this lib
with [get-window "Discovering libraries summary" | get-tree] {
get-item  "discover_lib/Importers:/.*" -index 0| get-property index | equals 0 
    | verify-true
get-item "discover_lib/Importers:/.*" -index 1
    | get-property index | equals 1 | verify-true
}
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "discover_lib" | get-property childCount | equals 3 | verify-true
    get-item "discover_lib" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Status: Added to project configuration" | verify-true
    get-item "discover_lib" | get-property "getItems().TreeItem[1].getText()" 
        | equals [format "Source: %s%sRobotProject%sTests_wit_lib%sdiscover_lib.py"  $RED_workspace_path $sys_sep $sys_sep $sys_sep]| verify-true
    get-item "discover_lib" | get-property "getItems().TreeItem[2].getItems().TreeItem[0].getText()" 
}
get-window "Discovering libraries summary" | get-button OK | click

//check if lib was added to red.xml
get-tab-folder -index 1 | get-tab-item "*RobotProject/red.xml" | click
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-table] {
    get-item "multiply - RobotProject" | get-property index | equals 0 | verify-true
    get-item "discover_lib - RobotProject\\/Tests_wit_lib" | get-property index | equals 1 | verify-true
}
//get-button "Save \((Ctrl|M1)\+S\)" | click

//============================================================================================================================
//open __init__ file and do some changes - window is shown
get-view "Project Explorer" | get-tree | select "RobotProject/Tests_wit_lib/__init__.robot" | double-click
with [get-editor "__init__.robot" | get-text-viewer] {
    set-caret-pos 6 12
    type-text 6
    key-type "M1+s"
}

wait-for-discover-window
get-window "Discovering libraries summary" | get-tree | get-item "discover_lib" | get-property "image.path" 
    | equals ".*warning_big.png" | verify-true
get-window "Discovering libraries summary" | get-button OK | click

//remove lib form red.xml
get-tab-folder -index 1 | get-tab-item "*RobotProject/red.xml" | click
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-table] {
    select "discover_lib - RobotProject\\/Tests_wit_lib" | key-type Del
}
    
get-button "Save \((Ctrl|M1)\+S\)" | click

//do some changes in test
get-tab-folder -index 1 | get-tab-item "__init__.robot" | click
with [get-editor "__init__.robot" | get-text-viewer] {
    key-type BackSpace
    key-type "M1+s"
}
wait-for-discover-window

//discover window is shown
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "discover_lib/.*" -index 0 | get-property caption 
        | equals "Status: Added to project configuration" | verify-true
    get-item "discover_lib/.*" -index 1
        | get-property caption | equals [format "Source: %s%sRobotProject%sTests_wit_lib%sdiscover_lib.py" $RED_workspace_path $sys_sep $sys_sep $sys_sep] 
        | verify-true
    get-item "discover_lib/.*" -index 2 | get-property caption 
        | equals [format "Importers: %s%sRobotProject%sTests_wit_lib" $RED_workspace_path $sys_sep $sys_sep] | verify-true
}

get-window "Discovering libraries summary" | get-button OK | click
//
//============================================================================================================================
//windows path and path for file outside workspace
get-view "Project Explorer" | get-tree | select "RobotProject/tests/windows_path.robot" | double-click

os-specific [get-java-property "user.home" |invoke replace "\\" "\\\\"] [get-java-property "user.home"]|  let [val home_path -input]{
	get-editor "windows_path.robot" | get-text-viewer | set-caret-pos 2 11
	if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
		get-editor "windows_path.robot" | get-text-viewer |type-text [concat $home_path "\\\\ext_lib\\\\external_lib.py" ]
		
	}-else{

		get-editor "windows_path.robot" | get-text-viewer |type-text [concat $home_path "/ext_lib/external_lib.py" ]
	}
	if [get-by-os -linux "Linux" -win "Windows"| equals "Linux"]{
		with [get-view Problems | get-tree] {
		    get-item "Errors \\(.* items\\)/Windows paths are not supported. Use global variable '${\\/}' or Linux-like '\\/' path separators." 
		        | get-property "columns[0]" 
		        | equals "Windows paths are not supported. Use global variable '${/}' or Linux-like '/' path separators." 
		        | verify-true
		    get-item "Errors \\(.* items\\)/Windows paths are not supported. Use global variable '${\\/}' or Linux-like '\\/' path separators." 
		        | get-property "columns[1]" | equals "windows_path.robot" | verify-true
		    get-item "Errors \\(.* items\\)/Windows paths are not supported. Use global variable '${\\/}' or Linux-like '\\/' path separators." 
		        | get-property "columns[3]" | equals "line 3" | verify-true
		}
	}

	get-editor "windows_path.robot" | get-text-viewer | key-type "M1+s"
	wait 2000
	//check icons
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-property itemCount | equals 3 | verify-true
	    get-item add | get-property "image.path" 
	        | equals ".*/success_big.png" | verify-true
	    get-item "external_lib" | get-property "image.path" 
	        | equals ".*/success_big.png" | verify-true
	    get-item "c:folderfile.py" | get-property "image.path" 
	        | equals ".*/error_fatal.png" | verify-true
	}
	//check fields for add.py (success)
	get-window "Discovering libraries summary" | get-tree | select "add/Status: Added to project configuration"
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "add/Status: Added to project configuration" | get-property index | equals 0 | verify-true
	    
	    get-item "add/Source:.*" | get-property caption 
	      | equals [format "Source: %s%sRobotProject%slibs%sadd.py" $RED_workspace_path $sys_sep $sys_sep $sys_sep $sys_sep]| verify-true
	    
	    get-item "add/Importers: .*" | get-property caption 
	    	 | equals [format "Importers: %s%sRobotProject%stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep] | verify-true
	}
	//check fields for extarnal lib outside workspace
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "external_lib/Status: Added to project configuration" | get-property index | equals 0 | verify-true

		get-item "external_lib/Source: .*" | get-property caption 
		| equals [format "Source: %s%sext_lib%sexternal_lib.py" $user_folder $sys_sep $sys_sep] | verify-true
				    	
	    get-item "external_lib/Importers: .*" | get-property caption | equals [format "Importers: %s%sRobotProject%Stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	         | verify-true
	}
	//check wondos path
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "c:folderfile.py/Status: Not added to project configuration" | get-property index | equals 0 | verify-true
	    get-item "c:folderfile.py/Source: Unknown" | get-property index | equals 1 | verify-true
	    get-item "c:folderfile.py/Importers:.*"| get-property caption | equals [format "Importers: %s%sRobotProject%stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	        | verify-true
	    get-item "c:folderfile.py/Additional info: .*" | get-property caption | equals [format "Additional info: Error in file '%s%sRobotProject%stests%swindows_path.robot': Test library 'c:folderfile.py' does not exist." $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	         | verify-true
	}
	get-window "Discovering libraries summary" | get-tree 
	    | select "c:folderfile.py/Additional info: .*"
	get-window "Discovering libraries summary" | get-editbox -after [get-label "Discovered libraries (3):"] 
	    | get-property text 
	    | equals [format "Additional info: Error in file '%s%sRobotProject%stests%swindows_path.robot': Test library 'c:folderfile.py' does not exist." $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	    | verify-true
	get-window "Discovering libraries summary" | get-button OK | click
	
}


//==================================================================================================================
//suite has relative paths and one lib contain argument
get-view "Project Explorer" | get-tree | select "RobotProject/tests/tsv_with_relative_paths.tsv" 
    | select "RobotProject/tests/tsv_with_relative_paths.tsv" | double-click

//edit and save    
with [get-editor "tsv_with_relative_paths.tsv" | get-text-viewer] {
    set-caret-pos 11 4
    type-text " "
    key-type "M1+s"
}
wait-for-discover-window

//check icons for status - ok, warning, warning
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "lib_with_args" | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item add | get-property "image.path" 
        | equals ".*/warning_big.png" | verify-true
    get-item multiply | get-property "image.path" 
        | equals ".*/warning_big.png" | verify-true
}

//check status of libs with warning 
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "add/Additional info: Library 'add' already existing in project configuration." | get-property index 
        | equals 3 | verify-true
    get-item "multiply/Additional info: Library 'multiply' already existing in project configuration." 
        | get-property index | equals 3 | verify-true
}
get-window "Discovering libraries summary" | get-button OK | click

//remove all libs from red.xml and add discover again
remove-all-libraries-from-xml
get-button "Save \((Ctrl|M1)\+S\)" | click

get-tab-folder -index 1 | get-tab-item "tsv_with_relative_paths.tsv" | click
with [get-editor "tsv_with_relative_paths.tsv" | get-text-viewer] {
    set-caret-pos 11 5
    type-text " "
    key-type "M1+s"
}
wait-for-discover-window

//now all are success
with [get-window "Discovering libraries summary" | get-tree] {
    get-item add | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item "lib_with_args" | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item multiply | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
}

//check if file were added to red.xml
get-window "Discovering libraries summary" | get-button OK | click
get-tab-folder -index 1 | get-tab-item "*RobotProject/red.xml" | click
with [get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-table] {
    get-property itemCount | equals 3 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "multiply - RobotProject" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "add - RobotProject/libs" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "lib_with_args - RobotProject/libs" | verify-true
}
get-button "Save \((Ctrl|M1)\+S\)" | click


//==============================================================================================================
//test with resource which imports library
remove-all-libraries-from-xml
get-view "Project Explorer" | get-tree | select "RobotProject/tests/test_with_resource.robot" | double-click
with [get-editor "test_with_resource.robot" | get-text-viewer] {
    set-caret-pos 8 11
    key-type "NUMPAD_9" 9
    key-type "M1+s"
}

//check that no window was shown
verify-error{get-window "Discovering libraries summary"}

//uncomment lib that exist in suite file
with [get-editor "test_with_resource.robot" | get-text-viewer] {
    set-caret-pos 4 2
    key-type BackSpace
    key-type "M1+s"
}
wait-for-discover-window

//check that now file are imported
with [get-window "Discovering libraries summary" | get-tree] {
    get-item res1 | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item multiply | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
}
get-window "Discovering libraries summary" | get-button OK | click

//==============================================================================================================
//suite with parameter EXECDIR
remove-all-libraries-from-xml

//add new line and save
get-view "Project Explorer" | get-tree | select "RobotProject/tests/lib_with_EXECDIR.robot" | double-click
with [get-editor "lib_with_EXECDIR.robot" | get-text-viewer] {
    set-caret-pos 5 5
    key-type "NUMPAD_ENTER" "\\u000D"
    key-type "M1+s"
}
wait-for-discover-window

//see if lib was added
with [get-window "Discovering libraries summary" | get-tree] {
    get-property itemCount | equals 1 | verify-true
    get-item divide | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
}
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "divide/Status: Added to project configuration" | get-property index | equals 0 | verify-true
    get-item "divide/Source:.*" | get-property caption | equals [format "Source: %s%sRobotProject%slibs%st%sdivide.py" $RED_workspace_path $sys_sep $sys_sep $sys_sep $sys_sep]
        | verify-true
    get-item "divide/Importers: .*" | get-property caption | equals [format "Importers: %s%sRobotProject%stests%slib_with_EXECDIR.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep]
        | verify-true
}
get-window "Discovering libraries summary" | get-button OK | click


------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
