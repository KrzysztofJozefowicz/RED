--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _ECH_IISiEeWImNPXuPy_LQ
Element-Name: ContentAssitantWithManyResources
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _6IIcwHjQEeWYifgNPLzx_Q
Runtime-Version: 2.0.0.201506120617
Save-Time: 11/16/15 2:59 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//open editor
with [get-view "Project Explorer" | get-tree] {
    double-click
    select "MediumRobotTest/TestFile.robot" | double-click
}

//check files in Resources content assistant
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 22 1
    type-text Re
    key-type "M1+SPACE"
    key-type Enter
    wait 300

}

with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property "getItems().TableItem[0].getText()" | equals "SecondProject/res2/res.robot" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "SecondProject/res1/res3/second project res.robot" 
        | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "SecondProject/res1/res3/RES.ROBOT" | verify-true
    get-property "getItems().TableItem[3].getText()" | equals "SecondProject/res1/res.robot" | verify-true
    get-property "getItems().TableItem[4].getText()" | equals "MediumRobotTest/two  spaces/normal.robot" | verify-true
    get-property "getItems().TableItem[5].getText()" | equals "MediumRobotTest/text_file.txt" | verify-true
    get-property "getItems().TableItem[6].getText()" | equals "MediumRobotTest/t/n.robot" | verify-true
    get-property "getItems().TableItem[7].getText()" | equals "MediumRobotTest/special letters/!@#$%^&()_;.robot" 
        | verify-true
    get-property "getItems().TableItem[8].getText()" | equals "MediumRobotTest/res2/res.robot" | verify-true
    get-property "getItems().TableItem[9].getText()" | equals "MediumRobotTest/res2/another_res.robot" | verify-true
    get-property "getItems().TableItem[10].getText()" | equals "MediumRobotTest/res1/simple_res.robot" | verify-true
    get-property "getItems().TableItem[11].getText()" | equals "MediumRobotTest/res1/res3/res.robot" | verify-true
    get-property "getItems().TableItem[12].getText()" | equals "MediumRobotTest/res1/res3/deep_res.robot" | verify-true
    get-property "getItems().TableItem[13].getText()" | equals "MediumRobotTest/res1/res.robot" | verify-true
    get-property "getItems().TableItem[14].getText()" | equals "MediumRobotTest/recurence_of_resources/1_res.robot" 
        | verify-true
    get-property "getItems().TableItem[15].getText()" | equals "MediumRobotTest/empty/empty.robot" | verify-true
}


//turn content assistant off
with [get-editor "TestFile.robot" | get-text-viewer] {
	key-type Esc
}
//add new Resource
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 22 12
    key-type "M1+SPACE"
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table 
    | select "MediumRobotTest\\/res1\\/res3\\/deep_res.robot" | click -default
    
//check visibility of variables in Content Assistant
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 26 1
    key-type Tab
    type-text "$"
    key-type "M1+SPACE"
    wait 300
}

if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
	with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
	    get-property "getItems().TableItem[0].getText()" | equals "${a}" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "${b}" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "${c}" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "${from_txt_res}" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "${not used var}" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "${n}" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "${sc_1}" | verify-true
	    get-property "getItems().TableItem[7].getText()" | equals "${sc_2}" | verify-true
	    get-property "getItems().TableItem[8].getText()" | equals "${sc_3}" | verify-true
	    get-property "getItems().TableItem[9].getText()" | equals "${scalar from simple res}" | verify-true
	    get-property "getItems().TableItem[10].getText()" | equals "${this is duplicate}" | verify-true
	    get-property "getItems().TableItem[11].getText()" | equals "${var from second project}" | verify-true
		
	}
}-else{

with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
	    get-property "getItems().TableItem[0].getText()" | equals "${a}" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "${b}" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "${c}" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "${from_txt_res}" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "${not used var}" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "${sc_1}" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "${sc_2}" | verify-true
	    get-property "getItems().TableItem[7].getText()" | equals "${sc_3}" | verify-true
	    get-property "getItems().TableItem[8].getText()" | equals "${scalar from simple res}" | verify-true
	    get-property "getItems().TableItem[9].getText()" | equals "${this is duplicate}" | verify-true
	    get-property "getItems().TableItem[10].getText()" | equals "${var from second project}" | verify-true	
	}

}


with [get-editor "TestFile.robot" | get-text-viewer] {
	key-type Esc
}


//check list visibility in Content assistant
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 26 6
    key-type BackSpace
    type-text "@"
    key-type "M1+SPACE"
    wait 300
}
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
	if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
	
	    get-property itemCount | equals 8 | verify-true
	    get-property "getItems().TableItem[0].getText()" | equals "@{list form second project}" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "@{list1}" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "@{list2}" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "@{list3}" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "@{list_from_simpl_res}" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "@{list_from_txt_res}" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "@{EMPTY}" | verify-true
	    get-property "getItems().TableItem[7].getText()" | equals "@{TEST_TAGS}" | verify-true
	}-else{
		get-property itemCount | equals 7 | verify-true
	    get-property "getItems().TableItem[0].getText()" | equals "@{list form second project}" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "@{list1}" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "@{list2}" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "@{list_from_simpl_res}" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "@{list_from_txt_res}" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "@{EMPTY}" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "@{TEST_TAGS}" | verify-true
	
	}
}
with [get-editor "TestFile.robot" | get-text-viewer] {
	key-type Esc
}

//add one variable by clicking
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 26 6
    key-type BackSpace
    type-text "Log  $"
    key-type "M1+SPACE"
    wait 300
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "${var from second project}" 
    | click -default
    
//add one KW by clicking    
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 26 36
    key-type "NUMPAD_ENTER" "\\u000D"
    type-text fr
    key-type "M1+SPACE"
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "from res 1 - res.robot" 
    | click -default
    
//add one list by clicking
with [get-editor "TestFile.robot" | get-text-viewer] {
    key-type "NUMPAD_ENTER" "\\u000D"
    type-text "Log  @"
    key-type "M1+SPACE"
    wait 300
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "@{list2}" | click -default

//check text
get-editor "TestFile.robot" | get-text-viewer | get-property text | equals "*** Settings ***\n"
    + "#importing from second project\n"
    + "Resource    ../SecondProject/res2/res.robot\n"
    + "Resource    ../SecondProject/res1/res3/RES.ROBOT\n"
    + "Resource    ../SecondProject/res1/res.robot\n"
    + "Resource    ../SecondProject/res1/res3/second project res.robot\n\n"
    + "#importing file from this project\n"
    + "Resource    res2/res.robot\n"
    + "Resource    res1/res3/res.robot\n\n"
    + "Resource    res1/simple_res.robot\n"
    + "Resource    res1/res.robot\n"
    + "Resource    t\\\\n"
    + ".robot\n"
    + "Resource    empty/empty.robot\n"
    + "Resource    text_file.txt\n"
    + "Resource    Capture.JPG\n\n"
    + "#not supported yet\n"
    + "#Resource    two \\ spaces/normal.robot\n"
    + "#Resource    special letters/!@#$%^&()_;.robot\n"
    + "Resource   res1/res3/deep_res.robot    \n\n"
    + "*** Test Cases ***\n"
    + "test 1\n"
    + "    Log  ${var from second project}\n"
    + "    from res 1    \n"
    + "    Log  @{list2}" | verify-true
    
if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{    
	with [get-view Problems | get-tree] {
	    get-item "Errors \\(1 item\\)" | get-property childCount | equals 1 | verify-true
	    get-item "Errors \\(1 item\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Resource import 'Capture.JPG' is invalid: given file is not a Resource file" | verify-true
	    get-item "Errors \\(1 item\\)" | get-property "getText()" | equals "Errors (1 item)" | verify-true
		}
}-else{

	with [get-view Problems | get-tree] {
	    get-property itemCount | equals 1 | verify-true
	    get-property "getItems().TreeItem[0].getText()" | equals "Errors (2 items)" | verify-true
	}
	with [get-view Problems | get-tree] {
		get-item "Errors \\(2 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Resource import 'Capture.JPG' is invalid: given file is not a Resource file" | verify-true
	    get-item "Errors \\(2 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Resource import 't\\n.robot' is invalid: given location does not point to a file" | verify-true	  
  

	}
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
