--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: AddingVariablesUsingContentAssistInSuite
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _YRYqkISeEeWImNPXuPy_LQ
Runtime-Version: 2.1.0.201606221726
Save-Time: 9/1/17 10:32 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | select "RobotProject/TestFile.robot" 
    | double-click
with [get-editor "TestFile.robot" | get-text-viewer] {
    key-type "M1+a"
    key-type Del
    key-type "M1+SPACE"
    key-type Down -times 3
    key-type Enter
    
	//add varaibles
    key-type "M1+SPACE"
 
	with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
	    get-property itemCount | equals 7| verify-true
	    get-property "getItems().TableItem[0].getText()" | equals "Fresh scalar" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "Fresh list" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "Fresh dictionary" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "*** Keywords ***" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "*** Settings ***" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "*** Test Cases ***" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "*** Variables ***" | verify-true
	}
	key-type Esc
}

with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 2 1
    //add default scalar
    key-type "M1+SPACE"
    key-type Enter
    key-type Tab
    // value
    type-text 1
    key-type Enter -times 2
    //add default  list
    key-type "M1+SPACE"
    key-type Down
    key-type Enter
    key-type Tab -times 2
    key-type Enter -times 2
    // add dict
    key-type "M1+SPACE"
    key-type Down -times 2
    key-type Enter
    key-type Tab -times 3
    key-type Enter -times 2
    //add user scalar
    key-type "M1+SPACE"
    key-type Enter
    type-text "my_scalar"
    key-type Tab
    type-text text
    key-type Enter -times 2
    // add user list
    key-type "M1+SPACE"
    key-type Down
    key-type Enter
    type-text "new list"
    key-type Tab
    type-text abc1
    key-type Tab
    type-text def2
    key-type Enter -times 2
    //add dict
    key-type "M1+SPACE"
    key-type Down -times 2
    key-type Enter
    type-text dict2
    key-type Tab
    type-text music
    key-type Tab
    type-text metal
    key-type Tab
    key-type Enter
    key-type Enter
}
get-editor "TestFile.robot" | get-text-viewer | get-property text | equals "*** Variables ***\n"
    + "${newScalar}    1\n"
    + "@{newList}    item    \n"
    + "&{newDict}    key=value    \n"
    + "${my_scalar}    text\n"
    + "@{new list}    abc1    def2\n"
    + "&{dict2}    music=metal\n" | verify-true
    
    
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 8 1
    key-type "NUMPAD_ENTER" "\\u000D" -times 2
    key-type "M1+SPACE"
    
    with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
	    get-property itemCount | equals 7| verify-true
	    get-property "getItems().TableItem[0].getText()" | equals "Fresh scalar" | verify-true
	    get-property "getItems().TableItem[1].getText()" | equals "Fresh list" | verify-true
	    get-property "getItems().TableItem[2].getText()" | equals "Fresh dictionary" | verify-true
	    get-property "getItems().TableItem[3].getText()" | equals "*** Keywords ***" | verify-true
	    get-property "getItems().TableItem[4].getText()" | equals "*** Settings ***" | verify-true
	    get-property "getItems().TableItem[5].getText()" | equals "*** Test Cases ***" | verify-true
	    get-property "getItems().TableItem[6].getText()" | equals "*** Variables ***" | verify-true
	}
	key-type Esc
	
}

//check moving selection by tab 
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 10 1
    key-type "M1+SPACE"
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "Fresh dictionary" | click 
    -default
with [get-editor "TestFile.robot" | get-text-viewer] {
    type-text "DIC 2"
    key-type Tab
    type-text k2
    key-type Tab
    type-text val
    key-type Tab
    //add new key
    type-text "new_key"
    key-type Tab
    key-type Tab
    //change to ne key
    type-text t2
    //back by Shift-tab
    key-type "M2+TAB"
    type-text "dict_after_changes"
}
get-editor "TestFile.robot" | get-text-viewer | get-property text | equals "*** Variables ***\n"
    + "${newScalar}    1\n"
    + "@{newList}    item    \n"
    + "&{newDict}    key=value    \n"
    + "${my_scalar}    text\n"
    + "@{new list}    abc1    def2\n"
    + "&{dict2}    music=metal    \n\n\n"
    + "&{dict_after_changes}    t2=val    new_key" | verify-true

// use variables with Content Assist in Test Cases 
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 10 18
    key-type Down
    key-type Enter -times 2
    type-text TC
    key-type "M1+SPACE"
    key-type BackSpace -times 2
    type-text Case
    key-type "M1+SPACE"
    key-type Down -times 3
    key-type Enter
    type-text "test 1"
    key-type Enter
    type-text scal
    key-type "M1+SPACE"
}
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property "getItems().TableItem[0].getText()" | equals "${my_scalar}" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "${newScalar}" | verify-true
}

with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    select "${my_scalar}" | key-type Enter
    click -default
}
get-eclipse-window | key-type Right
get-eclipse-window | key-type Enter
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 13 17
    key-type Enter
    type-text DI
    key-type "M1+SPACE"
    key-type Up
    key-type Enter -times 2
    type-text li
    key-type "M1+SPACE"
    key-type Up -times 2
    key-type Enter -times 2
}
// ------------------------- check filtering in tables --------------------------------------
// Variables tab
get-editor "TestFile.robot" | get-tab-folder | get-tab-item Variables | click
get-view Outline | get-tree | select "TestFile.robot/Variables/newScalar" | double-click
wait 500

with [get-editor "TestFile.robot"] {
    with [get-canvas -after [get-label Variables] -index 1] {
        key-type Right
        key-type Left
        key-type Enter
    }
    with [get-editbox -after [get-label Variables] -index 1] {
        type-text "nEw"
        key-type "M1+SPACE"
    }
}
with [get-window -class ContentProposalPopup | get-table] {
    get-property "getItems().length" | equals 1 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "${newScalar}" | verify-true
}
get-window -class ContentProposalPopup | get-table | select "${newScalar}" | double-click
get-view Outline | get-tree | select "TestFile.robot/Variables/newDict" | double-click
with [get-editor "TestFile.robot"] {
	with [get-canvas -after [get-label Variables] -index 1] {
	    key-type Right
	    key-type Left
	    key-type Enter
	}
	with [get-editbox -after [get-label Variables] -index 1] {
        type-text "new"
        key-type "M1+SPACE"
    }
}
with [get-window -class ContentProposalPopup | get-table] {
    get-property "getItems().length" | equals 1 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "&{newDict}" | verify-true
}
get-window -class ContentProposalPopup | get-table | select "&{newDict}" | double-click

get-view Outline | get-tree | select "TestFile.robot/Variables/dict2" | double-click
with [get-editor "TestFile.robot"] {
    with [get-canvas -after [get-label Variables] -index 1] {
        key-type Right
        key-type Left
        key-type Enter
    }
    with [get-editbox -after [get-label Variables] -index 1] {
        key-type "M1+SPACE"
    }
}
with [get-window -class ContentProposalPopup | get-table] {
    get-property "getItems().length" | equals 1 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "&{dict2}" | verify-true
}
get-window -class ContentProposalPopup | get-table | select "&{dict2}" | double-click
// Test Cases tab
get-editor "TestFile.robot" | get-tab-folder | get-tab-item "Test Cases" | click
with [get-view Outline] {
    get-button "Expand All" | click
    get-tree | select "TestFile.robot/Test Cases/test 1/" | double-click
}
get-view Outline | get-tree | select "TestFile.robot/Test Cases/test 1/" | double-click
with [get-editor "TestFile.robot"] {
	with [get-canvas -after [get-label "Test Cases"] -index 1] {
	    key-type Right
	    key-type Left
	    key-type Enter
    }
    with [get-editbox -after [get-label "Test Cases"] -index 1] {
        key-type "M1+SPACE"
    }
}
with [get-window -class ContentProposalPopup | get-table] {
//    get-property "getItems().length" | equals 38 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "${my_scalar}" | verify-true
}
get-window -class ContentProposalPopup | get-table | select "${my_scalar}" | double-click
get-view Outline | get-tree | select [get-item "TestFile.robot/Test Cases/test 1" | get-item "" -index 2] | double-click
with [get-editor "TestFile.robot"] {
    with [get-canvas -after [get-label "Test Cases"] -index 1] {
        key-type Right
        key-type Left
        key-type Enter
    }
    get-editbox -after [get-label "Test Cases"] -index 1 | key-type "M1+SPACE"
}

get-window -class ContentProposalPopup | get-table | select "@{new list}" | double-click
get-editor "TestFile.robot" | get-editbox -after [get-label "Test Cases"] -index 1 | set-focus
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
