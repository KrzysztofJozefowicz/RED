--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _9l_cgK2nEea8FqgKy4fLvA
Element-Name: QuickFixAndResourceInPYTHONPATH
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _i2nE4CT9EeesE7mkFuId1w
Runtime-Version: 2.2.0.201706152316
Save-Time: 1/23/18 2:01 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// 1. Before test add full path to folder from this test library to PYTHONPATH:
//   your_path\RedGuiTests\TestData\LibsFromPythonPath
//
// 2. Set in Contex -> global_parameters -> user_RCPTT_project_path
//   full path to this test library, i.e.:
//   D:\RED_testy\RcpttProjects\RedGuiTests
//





//switch off autodiscovery
get-view "Project Explorer" | get-tree | select "ResourceProject/red.xml" | double-click
with [get-editor "ResourceProject/red.xml"] {
    get-tab-folder | get-tab-item "Referenced libraries" | click
    with [get-section "Referenced libraries" | get-button "Auto discover libraries after test suite save action"] {
        uncheck
        key-type "M1+s"
    }
}

get-view "Project Explorer" | get-tree | select "ResourceProject/test.robot" 
    | double-click
    
//add file with resource and library relative to PYTHONPATH
get-editor "test.robot" | get-text-viewer | set-text "*** Settings ***\n\n"
    + "#resource relative to PYTHONPATH\n"
    + "Resource    SimpleResource.robot\n"
    + "Resource    Resources/ResourcesFromFolder.robot\n\n"
    + "Library    LibFromPythonPath\n\n"
    + "*** Test Cases ***" 

get-editor "test.robot" | get-text-viewer | key-type "M1+s"

//use quick fix to add lib to red.xml
with [get-editor "test.robot" | get-text-viewer] {
    set-caret-pos 7 24
    hover-text 7 20
    key-type "M1+1"
}
wait 500
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table 
    | select "Discover 'LibFromPythonPath' and add to configuration" | click -default

get-button "Save \((Ctrl|M1)\+S\)" | click

//clean
get-menu "Project/Clean..." | click
get-window Clean | get-button $OK_Clean_button | click

//check errors
with [get-view Problems | get-tree] {
    get-item "Errors \\(3 items\\)" | get-property "getItems().length" | equals 3 | verify-true
    get-item "Errors \\(3 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Empty setting 'Resource'. Specify path of resource file to import" | verify-true
    get-item "Errors \\(3 items\\)" | get-property "getItems().TreeItem[1].getText()" 
        | equals "Path 'Resources/ResourcesFromFolder.robot' points to location outside your workspace" | verify-true
    get-item "Errors \\(3 items\\)" | get-property "getItems().TreeItem[2].getText()" 
        | equals "Path 'SimpleResource.robot' points to location outside your workspace" | verify-true
}


let [val python_path [get-by-os -win [concat [$RCPTT_project_path | invoke substring 0 1| invoke toUpperCase] [$RCPTT_project_path | invoke substring  1 ] | invoke replace  "\\" "/" ]]]{
	with [get-view Problems | get-tree] {
	    get-item "Warnings \\(3 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals [format "Path 'Resources/ResourcesFromFolder.robot' is relative to location from python Modules Search Path (sys.path). Points to '%s/TestData/LibsFromPythonPath/Resources/ResourcesFromFolder.robot'"  $python_path ]
	        | verify-true
	    get-item "Warnings \\(3 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals [format "Path 'SimpleResource.robot' is relative to location from python Modules Search Path (sys.path). Points to '%s/TestData/LibsFromPythonPath/SimpleResource.robot'" $python_path]
	        | verify-true
	    get-item "Warnings \\(3 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals [format "The path %s/TestData/LibsFromPythonPath is absolute. RED prefers using workspace-relative paths which makes your projects more portable"  $python_path]
	        | verify-true
	}
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
