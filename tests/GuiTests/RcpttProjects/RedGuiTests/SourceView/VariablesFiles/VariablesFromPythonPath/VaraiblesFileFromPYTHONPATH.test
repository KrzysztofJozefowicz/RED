--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _KeUAcKwAEea8FqgKy4fLvA
Element-Name: VaraiblesFileFromPYTHONPATH
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _X0CtkKzTEea8FqgKy4fLvA
Runtime-Version: 2.2.0.201706152316
Save-Time: 1/30/18 2:55 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// 1. Before test add full path to folder from this test library to PYTHONPATH:
//   your_path\RedGuiTests\TestData\LibsFromPythonPath
//
// 2. Set in Contex -> global_parameters -> user_RCPTT_project_path
//   full path to this test library, i.e.:
//   D:\RED_testy\RcpttProjects\RedGuiTests
//


//add value to variables (different paths to project in different computers)
with [get-view "Project Explorer" | get-tree] {
    select "FirstProject/res_with_variable_scalar.tsv" | double-click
    select "FirstProject/red.xml" | double-click
}
with [get-editor "FirstProject/red.xml" | get-section "Variables mappings" | get-table] {
    select "${var_from_var_mapping}" | double-click
    select "${var_from_var_mapping}" | activate-cell-edit -column 1
    with [get-editbox] {
        set-text [concat [replace -input $RED_workspace_path -old "\\" -new "/"] "/FirstProject/VaraibalesFromFirstProject/var_from_project1.py"]
        key-type Enter
    }
    apply-cell-edit -deactivate
    select "${another_project_path}" | double-click
    select "${another_project_path}" | activate-cell-edit -column 1
    with [get-editbox] {
        set-text [concat [replace -input $RED_workspace_path -old "\\" -new "/"] "/3Project"]
        key-type Enter
    }
    apply-cell-edit -deactivate
    key-type "M1+s"
}
with [get-editor "res_with_variable_scalar.tsv"] {
    click
    with [get-text-viewer] {
        set-caret-pos 7 29
        type-text " "
        key-type "M1+s"
    }
}

get-view Problems | get-tree | get-item ".*" -index 0| expand-all	
//try -times 4 -delay 1000 -command{
//	get-view Problems | get-tree | get-item "Errors \\(3 items\\)" | get-property childCount | equals 3 | verify-true
//}
wait-for-errors -amount 1 -times 4 -delay 1000

//check all errros
with [get-view Problems | get-tree] {
    get-item -path "Errors \\(1 item\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Resource import 'not_existing.py' is invalid: file does not exist. Check file name and path." 
        | verify-true
}        
let [val rcptt_path [get-by-os -win [concat [$RCPTT_project_path | invoke substring 0 1| invoke toUpperCase] [$RCPTT_project_path | invoke substring  1 ] | invoke replace  "\\" "/" ] -linux $RCPTT_project_path]]{
	with [get-view Problems | get-tree] {
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        	|  equals [format "Path 'SecondLevel%sSimpleVariablesFromPythonPath.py' is relative to location from python Modules Search Path (sys.path). " +
	           "Points to '%s/TestData/LibsFromPythonPath/SecondLevel/SimpleVariablesFromPythonPath.py'" $sys_sep $rcptt_path]
	        | verify-true
	        
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals [format "Path 'SecondLevel%sSimpleVariablesFromPythonPath.py' points to location outside your workspace" [get-by-os -win [concat $sys_sep $sys_sep] -linux $sys_sep]]
	        | verify-true
	        
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        |  equals [format "Path 'var from 3 project.py' is relative to location from python Modules Search Path (sys.path). "+
		            "Points to '%s/3Project/Var from 3 project/flowers/var from 3 project.py'" [replace -input $RED_workspace_path -old "\\" -new "/"]]
		        | verify-true
		        
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals [format "Path 'var_in_root.py' is relative to location from python Modules Search Path (sys.path). " +
		           "Points to '%s/FirstProject/var_in_root.py'" [replace -input $RED_workspace_path -old "\\" -new "/"]] | verify-true
		           
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals [format "Path 'VaraibalesFromFirstProject/var_from_project1.py' is relative to location from python Modules Search Path (sys.path). "
	        + "Points to '%s/FirstProject/VaraibalesFromFirstProject/var_from_project1.py'" [replace -input $RED_workspace_path -old "\\" -new "/"] ]
	        | verify-true
	        
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals [format "Path 'VariablesWithClass.py' is relative to location from python Modules Search Path (sys.path). " +
		           "Points to '%s/TestData/LibsFromPythonPath/VariablesWithClass.py'"  $rcptt_path]
		        | verify-true
		        
	    get-item -path "Warnings \\(7 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Path 'VariablesWithClass.py' points to location outside your workspace" | verify-true
	}
}

//check if user can open file with variables set in variable mapping
with [get-editor "res_with_variable_scalar.tsv"] {
    click
    with [get-text-viewer] {
        set-caret-pos 2 23
        open-declaration
    }
}
get-editor "var_from_project1.py" | get-text-viewer | get-property text | equals "first_project_var = 9" | verify-true
with [get-editor "res_with_variable_scalar.tsv"] {
    click
    with [get-text-viewer] {
        set-caret-pos 3 52
        open-declaration
    }
}
get-editor "var from 3 project.py" | get-text-viewer | get-property text 
    | equals "flowers ={\"roses\" : 1, 'tulips': 5}\n"
    + "all_flowers = 5962" | verify-true
    
//check iff al variables are visible in content assist
get-view "Project Explorer" | get-tree | select "SecondProject/TestFile.robot" | double-click

with [get-editor "TestFile.robot"] {
    click
    with [get-text-viewer] {
        set-caret-pos 24 7
        key-type "NUMPAD_ENTER" "\\u000D"
        type-text "log  ${"
        key-type "M1+SPACE"
    }
}
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property "getItems().TableItem[0].getText()" | equals "${allflowers}" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "${firstprojectvar}" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "${secondvarfromroot}" | verify-true
    get-property "getItems().TableItem[3].getText()" | equals "${varfrompythonapth}" | verify-true
    get-property "getItems().TableItem[4].getText()" | equals "${varinroot}" | verify-true
    get-property "getItems().TableItem[5].getText()" | equals "${/}" | verify-true
    get-property "getItems().TableItem[6].getText()" | equals "${:}" | verify-true
}    

//check dict
with [get-editor "TestFile.robot"] {
    with [get-text-viewer] {
        set-caret-pos 25 12
        key-type "M1+SPACE"
    }
    get-canvas | key-type "TRAVERSE_ESCAPE"
    with [get-text-viewer] {
        key-type ESC
        type-text "\\"
        key-type BackSpace -times 3
        type-text "&{"
        key-type "M1+SPACE"
    }
}
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property itemCount | equals 3 | verify-true
    get-property "getItems().TableItem[0].getText()" | equals "&{flowers}" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "&{EMPTY}" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "&{SUITE_METADATA}" | verify-true
}    

//try to open file form PYTHONPATH
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 4 23
    hover-text 4 22
    key-type F3
}

with [get-tab-folder -index 1] {
    get-property activePage | equals "*TestFile.robot" | verify-true
}   

with [get-editor "TestFile.robot" | get-text-viewer] {
    hover-text 7 37
    set-caret-pos 7 30
    open-declaration
}
get-editor "var_from_project1.py" | get-text-viewer | get-property text | equals "first_project_var = 9" | verify-true
with [get-editor "TestFile.robot"] {
    click
    with [get-text-viewer] {
        set-caret-pos 8 23
        open-declaration
    }
}
get-editor "var_in_root.py" | get-text-viewer | get-property text | equals "def get_variables(arg=None):\n"
    + "    variables = {'var_in_root' : 'text', 'second_var_from_root': 'text2'}\n"
    + "    return variables" | verify-true
with [get-editor "TestFile.robot"] {
    click
    with [get-text-viewer] {
        set-caret-pos 11 22
        open-declaration
    }
}
get-editor "var from 3 project.py" | get-text-viewer | get-property text 
    | equals "flowers ={\"roses\" : 1, 'tulips': 5}\n"
    + "all_flowers = 5962" | verify-true
get-editor "TestFile.robot" | click

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
