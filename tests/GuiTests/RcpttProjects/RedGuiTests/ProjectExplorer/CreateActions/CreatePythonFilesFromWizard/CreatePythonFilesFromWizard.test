--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: CreatePythonFilesFromWizard
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: __DQnANGFEeWl7fLmvSqX3Q
Runtime-Version: 2.0.2.201511100828
Save-Time: 2/24/16 4:28 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// create empty python file
get-view "Project Explorer" | get-tree | select RobotProject | get-menu "New/Robot python file" | click
with [get-window "New Robot python file"] {
    get-editbox -after [get-label "File name:"] | set-text "empty.py"
    get-button Finish | click
}

with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "empty.py" | verify-true
    get-property activePage | equals "empty.py" | verify-true
    get-property tabCount | equals 1 | verify-true
}

// check body
get-editor "empty.py" | get-text-viewer | get-property text | equals "" | verify-true

// create variable file
get-view "Project Explorer" | get-tree | select RobotProject | select RobotProject | get-menu "New/Robot python file" 
    | click
with [get-window "New Robot python file"] {
    get-button "Variables file" | click
    get-editbox -after [get-label "File name:"] | set-text "var_file.py"
    get-button Finish | click
}

with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "empty.py" | verify-true
    get-property "pages[1]" | equals "var_file.py" | verify-true
    get-property activePage | equals "var_file.py" | verify-true
    get-property tabCount | equals 2 | verify-true
}
// check body
get-editor "var_file.py" | get-text-viewer | get-property text | equals "def get_variables(arg=None):\n"
    + "    variables = {'var' : 'value'}\n"
    + "    return variables" | verify-true
get-view "Project Explorer" | get-tree | select RobotProject | select RobotProject | get-menu "New/Robot python file" 
    | click

// create Variables file with class
with [get-window "New Robot python file"] {
    get-button "Variables file with class" | click
    get-editbox -after [get-label "File name:"] | set-text "var_with_class.py"
    get-button Finish | click
}

with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "empty.py" | verify-true
    get-property "pages[1]" | equals "var_file.py" | verify-true
    get-property "pages[2]" | equals "var_with_class.py"| verify-true
    get-property activePage | equals "var_with_class.py" | verify-true
    get-property tabCount | equals 3 | verify-true
}

// check body
get-editor "var_with_class.py" | get-text-viewer | get-property text | equals "class var_with_class(object):\n"
    + "    def get_variables(self, *args):\n"
    + "        variables = {'var' : 'value'}\n"
    + "        return variables" | verify-true

// create Robot python file
get-view "Project Explorer" | get-tree | select RobotProject | select RobotProject | get-menu "New/Robot python file" 
    | click
with [get-window "New Robot python file"] {
    get-button Library | click
    get-editbox -after [get-label "File name:"] | set-text "lib.py"
    get-button Finish | click
}

with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "empty.py" | verify-true
    get-property "pages[1]" | equals "var_file.py" | verify-true
    get-property "pages[2]" | equals "var_with_class.py"| verify-true
    get-property "pages[3]" | equals "lib.py"| verify-true
    get-property activePage | equals "lib.py" | verify-true
    get-property tabCount | equals 4 | verify-true
}

// check body
get-editor "lib.py" | get-text-viewer | get-property text | equals "class lib(object):\n\n"
    + "    ROBOT_LIBRARY_VERSION = 1.0\n\n"
    + "    def __init__(self):\n"
    + "        pass\n\n"
    + "    def keyword(self):\n"
    + "        pass" | verify-true

// create New Robot python file
get-view "Project Explorer" | get-tree | select RobotProject | select RobotProject | get-menu "New/Robot python file" 
    | click

with [get-window "New Robot python file"] {
    get-button "Dynamic API library" | click
    get-editbox -after [get-label "File name:"] | set-text "dyn_lib.py"
    get-button Finish | click
}

with [get-tab-folder -index 1] {
    get-property "pages[0]" | equals "empty.py" | verify-true
    get-property "pages[1]" | equals "var_file.py" | verify-true
    get-property "pages[2]" | equals "var_with_class.py"| verify-true
    get-property "pages[3]" | equals "lib.py"| verify-true
    get-property "pages[4]" | equals "dyn_lib.py"| verify-true
    get-property activePage | equals "dyn_lib.py" | verify-true
    get-property tabCount | equals 5 | verify-true
}
// check body
get-editor "dyn_lib.py" | get-text-viewer | get-property text | equals "class dyn_lib(object):\n\n"
    + "    def get_keyword_names(self):\n"
    + "        return ['first keyword', 'second keyword']\n\n"
    + "    def run_keyword(self, name, args):\n"
    + "        print \"Running keyword '%s' with arguments %s.\" % (name, args)" | verify-true
    
//create file with existing name
get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | get-menu "New/Robot python file" | click
get-window "New Robot python file" | get-editbox -after [get-label "File name:"] | set-text "empty.py"
get-window "New Robot python file" | get-button Finish | get-property enablement | equals false | verify-true
get-window "New Robot python file" | get-editbox -after [get-label "Robot python file"] | get-property text 
    | equals "'empty.py' already exists." | verify-true
get-window "New Robot python file" | get-button Cancel | click  
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
